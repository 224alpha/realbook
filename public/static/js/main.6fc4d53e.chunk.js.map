{"version":3,"sources":["services/HttpService.js","form.js","invoicerule/form.js","App.js","serviceWorker.js","index.js"],"names":["HttpService","get","url","arguments","length","undefined","Promise","resolve","reject","axios","then","response","catch","error","post","data","Option","Select","Form","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","name","modalVisible","suppliers","activeInitial","countries","isEdit","hasErr","currencies","RA_REFERENCE","agents","activeRowIndex","formData","OVER_ALL_DISCOUNT","TOTAL_TAX_CALCULATION","OVER_ALL_LOSS","OVER_ALL_PROFIT","dynamic","totalTax","totalDiscount","totalCost","dynamic_formData","SERVICE_CATEGORY","PRODUCT_NAME","PER_SERVICE_WISE_SUPPLIER_NAME","COMPONENTS_WISE_SELLING_COST","PER_SERVICE_SUPPLIER_CODE","SERVICE_COUNTRY","value","_this2","res","status","console","log","customer","map","item","indx","push","customer_name","client_ref_no","split","setState","match","params","ra_reference","activeObj","SERVICE_CITY","TAX_CALCULATION","FOREIGN_CURRENCY","COMPONENTS_WISE_MARKUP","COMPONENTS_WISE_DISCOUNT_COMISSION","COMPONENTS_WISE_NET_COST_CURRENCY","COMPONENTS_WISE_NET_COST","RA_FILE_HANDLER","PAYMENT_SLABS","SUPPLIER_PAYMENT_DEADLINE","COMPONENTS_WISE_CURRENCY","ARRIVALDATE","getCountries","getCurrency","document","title","getActiveBooking","_this$state","assign","id","_this3","success","SELLINGCOST","_this4","suppliercountry","_this5","currency","trim","ismanual","splice","cost","parseFloat","discount","parseInt","tax","_this6","RA_AGENT_CODE","INVOICE_CURRENCY","INVOICE_DATE","EXCHANGE_RATE","notification","message","description","CHECK_IN_DATE","CHECK_OUT_DATE","toString","TOTAL_IN_AMOUNTS","SBU","idx","toConsumableArray","msg","loading","self","setTimeout","window","location","href","warning","dateString","defineProperty","activeRowData","_this7","supplier","supplier_display_name","supplier_id","_this8","_this$state2","react_default","a","createElement","className","htmlFor","type","defaultValue","onChange","e","target","placeholder","auto_complete","style","width","left","dataSource","onSelect","getAgentCode","filterOption","inputValue","option","children","toUpperCase","indexOf","INVOICE_NUMBER","FIRSTNAME","date_picker","moment","format","date","min","PAYMENT_DEADLINE","STAND_ALONE","val","itm","LEAD_PASSENGER","setInDate","setOutDate","key","setSupplierName","searchSupplier","setSellingCost","contryName","onClick","openModal","data-toggle","data-target","cloneField","deleteRow","height","BOOKING_NOTES","rows","resize","submitData","modal","visible","footer","onCancel","role","aria-labelledby","input","setModalValues","setTotalTax","classsName","es_select","setTotalDiscount","saveRow","Component","withRouter","InvoiceRuleform","getCompanyName","countryList","getSbu","sbuList","sbu","handleSearchParty","concat","partList","mapParty","i","handleChangeParty","nm","objectSpread","defaultValues","party_id","party_name","handleCompanyChange","company_id","handleSbuChange","sbu_id","handledateChange","invoice_date","getExistingdata","mode","dynamicId","da","savedata","raw","p1","p2","all","err","background","padding","class","card","bordered","marginLeft","headStyle","color","row","paddingBottom","col","span","form_Option","d","showSearch","defaultActiveFirstOption","showArrow","onSearch","notFoundContent","float","es_button","App","react_router_dom","react_router","exact","path","component","Boolean","hostname","ReactDOM","render","App_App","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.6fc4d53e.chunk.js","sourcesContent":["import axios from 'axios';\r\nconst envoirnment = process.env.NODE_ENV;\r\n// const defaultVersion = 'v1';\r\nconst api_url = envoirnment==='development'?'http://localhost:5000':'';\r\n\r\nclass Httpservice{\r\n  \r\n    get = (url=\"\") => new Promise((resolve,reject)=>{\r\n        // var headers = {\r\n        //     'Authorization': \"Bearer \"+token\r\n        // };\r\n       \r\n        axios.get(api_url+'/'+url)\r\n        .then(function(response){\r\n            resolve(response);\r\n        })\r\n        .catch(function(error){\r\n            reject(error)\r\n        });\r\n    })\r\n    \r\n\r\n    post = (url,data) => new Promise((resolve,reject)=>{\r\n        // var headers = {\r\n        //     'Authorization': \"Bearer \"+token\r\n        // };\r\n       \r\n        axios.post(api_url+'/'+url,data)\r\n            .then(function (response) {\r\n                resolve(response);\r\n            })\r\n            .catch(function (error) {\r\n                reject(error);\r\n            });\r\n    })\r\n\r\n\r\n    // postFile = (url,data,token,version=defaultVersion) => new Promise((resolve,reject)=>{\r\n    //     axios.post(api_url+version+'/'+url,data,{headers: {'Authorization': \"Bearer \"+token, 'content-type': 'multipart/form-data' }})\r\n    //         .then(function (response) {\r\n    //             resolve(response);\r\n    //         })\r\n    //         .catch(function (error) {\r\n    //             reject(error);\r\n    //         });\r\n    // })\r\n\r\n    // putFile = (url,data,type)=>new Promise((resolve,reject)=>{\r\n       \r\n    //    var options = {\r\n    //         headers: {\r\n    //             'Content-Type': type\r\n    //           },\r\n    //           onUploadProgress: function(progressEvent) {\r\n    //             var percentCompleted = Math.round( (progressEvent.loaded * 100) / progressEvent.total );\r\n    //             GlobalStore.fileUploadPercentage=percentCompleted;\r\n    //           }\r\n    //     }\r\n        \r\n    //     axios.put(url,data,options).then(response=>{\r\n            \r\n    //         resolve(response)\r\n    //     }).catch(error=>{\r\n    //         reject(error);\r\n    //     })\r\n    // })\r\n   \r\n    \r\n\r\n  \r\n}\r\n\r\nexport default new Httpservice();\r\n// https://redappletravel.realbooks.in/api/","import React, { Component } from 'react'\r\nimport axios from 'axios';\r\nimport 'antd/dist/antd.css';\r\nimport './App.css';\r\nimport { Select,DatePicker, message,notification, AutoComplete, Modal, Input, InputNumber } from 'antd';\r\nimport {withRouter} from 'react-router-dom';\r\nimport moment from 'moment';\r\nimport HttpService from './services/HttpService';\r\n\r\nconst Option = Select.Option;\r\n\r\n\r\n\r\nclass Form extends Component {\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state={\r\n            name:\"\",\r\n            modalVisible:false,\r\n            suppliers:[],\r\n            activeInitial:{},\r\n            countries:[],\r\n            isEdit:false,\r\n            hasErr:false,\r\n            currencies:[],\r\n            RA_REFERENCE:\"\",\r\n            agents:[],\r\n            activeRowIndex:-1,\r\n            formData:{OVER_ALL_DISCOUNT:0,TOTAL_TAX_CALCULATION:0,OVER_ALL_LOSS:0,OVER_ALL_PROFIT:0},\r\n            dynamic:[],\r\n            totalTax:0,\r\n            totalDiscount:0,\r\n            totalCost:0,\r\n            dynamic_formData:{\r\n                SERVICE_CATEGORY:\"\",\r\n                PRODUCT_NAME:\"\",\r\n                PER_SERVICE_WISE_SUPPLIER_NAME:\"\",\r\n                COMPONENTS_WISE_SELLING_COST:\"\",\r\n                PER_SERVICE_SUPPLIER_CODE:\"\",\r\n                SERVICE_COUNTRY:\"\"\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n    getAgentCode(formData,value){\r\n        // /api/customer/search?search=\r\n         if(value.length>=3){\r\n            HttpService.get(\"api/customer/search?search=\"+value).then(res=>{\r\n                if(res.status===200){\r\n                    console.log(res.data)\r\n                    let data=[]\r\n                res.data.customer.map((item,indx)=>{\r\n                    \r\n                        data.push(item.customer_name+\",\"+item.client_ref_no)\r\n\r\n                })\r\n                if(value!==undefined){\r\n                    // dynamic[indx]['PER_SERVICE_WISE_SUPPLIER_NAME']=value.split(\",\")[0]\r\n                    formData['RA_AGENT_CODE']=value.split(\",\")[1]\r\n     \r\n             }\r\n             else{\r\n                 formData['RA_AGENT_CODE']=null;\r\n                //  dynamic[indx]['PER_SERVICE_SUPPLIER_CODE']=\"\";\r\n             }\r\n                this.setState({agents:data,formData})\r\n                }\r\n            })\r\n        }\r\n        else{\r\n            formData['RA_AGENT_CODE']=null;\r\n            // dynamic[indx]['PER_SERVICE_SUPPLIER_CODE']=\"\";\r\n            this.setState({formData})\r\n\r\n        }\r\n    }\r\n\r\n    openModal(indx){\r\n        // console.log(this.props.match.params.ra_reference)\r\n        if(this.props.match.params.ra_reference!==undefined){\r\n            this.setState({activeRowIndex:indx,activeInitial:this.state.dynamic[indx]})\r\n        }\r\n        else{\r\n            if(this.state.dynamic[indx]!==undefined){\r\n            this.setState({activeRowIndex:indx,activeInitial:this.state.dynamic[indx]})\r\n                \r\n            }\r\n            else{\r\n                let activeObj={SERVICE_CITY:null,TAX_CALCULATION:null,FOREIGN_CURRENCY:null,COMPONENTS_WISE_MARKUP:null,\r\n                    COMPONENTS_WISE_DISCOUNT_COMISSION:null,COMPONENTS_WISE_NET_COST_CURRENCY:null,COMPONENTS_WISE_NET_COST:null,RA_FILE_HANDLER:null,PAYMENT_SLABS:null,\r\n                SUPPLIER_PAYMENT_DEADLINE:null,COMPONENTS_WISE_CURRENCY:null,ARRIVALDATE:null};\r\n                this.setState({activeRowIndex:indx,activeInitial:activeObj})\r\n                console.log(activeObj)\r\n            }\r\n\r\n        }\r\n        this.setState({modalVisible:true})\r\n    }\r\n    componentWillMount(){\r\n        // this.getSupplier()\r\n        this.getCountries()\r\n        this.getCurrency()\r\n        document.title=\"BOOKING FORM | REAL BOOKS\"\r\n        // edit mode setup\r\n        if(this.props.match.params.ra_reference!==undefined){\r\n            this.getActiveBooking(this.props.match.params.ra_reference)\r\n        }\r\n         // dynamic form_setup\r\n        let {dynamic,dynamic_formData}=this.state;\r\n        dynamic.push(Object.assign({},dynamic_formData));\r\n        \r\n        this.setState({dynamic});\r\n    }\r\n\r\n    getActiveBooking(id){\r\n        \r\n        HttpService.get('bookingmaster/local/'+id).then(res=>{\r\n            if(res.data.success){\r\n               \r\n                this.setState({isEdit:true,formData:res.data.data,dynamic:res.data.data.dynamic,RA_REFERENCE:res.data.RA_REFERENCE,totalCost:res.data.data.SELLINGCOST,totalDiscount:res.data.data.OVER_ALL_DISCOUNT,totalTax:res.data.data.TOTAL_TAX_CALCULATION,\r\n                activeInitial: res.data.data.dynamic[ res.data.data.dynamic.length-1]\r\n                })\r\n            }\r\n            \r\n            // console.log(this.state)\r\n        })\r\n    }\r\n\r\n    //  getSupplier(){\r\n        \r\n    //     HttpService.get('api/supplier/getall').then(res=>{\r\n    //         if(res.status===200){\r\n    //             let data=[]\r\n    //             res.data.supplier.map((item,indx)=>{\r\n    //                 // if(indx<20){\r\n    //                     data.push(item.supplier_display_name+\" , \"+item.supplier_id)\r\n\r\n    //                 // }\r\n    //             })\r\n    //             this.setState({suppliers:data})\r\n    //         }\r\n    //     })\r\n    // }\r\n\r\n    getCountries(){\r\n        \r\n        HttpService.get('api/service/country/getall').then(res=>{\r\n            if(res.status===200){\r\n                this.setState({countries:res.data.suppliercountry})\r\n            }\r\n        })\r\n    }\r\n\r\n    getCurrency(){\r\n        \r\n        HttpService.get('api/currency/getall').then(res=>{\r\n            if(res.status===200){\r\n                this.setState({currencies:res.data.currency})\r\n            }\r\n        })\r\n    }\r\n\r\n    setSupplierName(dynamic,value,indx){\r\n        // value=value.target.value;\r\n        console.log(value.split(\"~\"))\r\n        if(value!==undefined){\r\n            if(value.split(\"~\").length===2){\r\n                dynamic[indx]['PER_SERVICE_WISE_SUPPLIER_NAME']=value.split(\"~\")[0]\r\n               dynamic[indx]['PER_SERVICE_SUPPLIER_CODE']=value.split(\"~\")[1].trim()\r\n            }\r\n            else{\r\n                dynamic[indx]['PER_SERVICE_WISE_SUPPLIER_NAME']=value.split(\"~\")[0]+value.split(\"~\")[value.split(\"~\").length-2]\r\n                dynamic[indx]['PER_SERVICE_SUPPLIER_CODE']=value.split(\"~\")[value.split(\"~\").length].trim()\r\n            }\r\n               \r\n\r\n        }\r\n        else{\r\n            dynamic[indx]['PER_SERVICE_WISE_SUPPLIER_NAME']=undefined;\r\n            dynamic[indx]['PER_SERVICE_SUPPLIER_CODE']=\"\";\r\n        }\r\n\r\n        console.log(dynamic[indx])\r\n       this.setState({dynamic});\r\n    }\r\n\r\n    cloneField(dynamic){\r\n        let {dynamic_formData}=this.state;\r\n        // console.log('cloning>>>>>')\r\n\r\n        dynamic.push(Object.assign({},dynamic_formData,{ismanual:1}))\r\n\r\n        this.setState({dynamic});\r\n    }\r\n\r\n    \r\n    deleteRow(dynamic,indx){\r\n        // console.log(dynamic)\r\n        // console.log('deleting>>>>> '+indx)\r\n\r\n        dynamic.splice(indx,1);\r\n        // console.log('deleted')\r\n        // console.log(dynamic)\r\n        let cost=0;\r\n        dynamic.map(item=>{\r\n            cost=cost+parseFloat(item.COMPONENTS_WISE_SELLING_COST);\r\n        })\r\n\r\n        this.setState({dynamic,totalCost:cost,formData:Object.assign({},this.state.formData,{SELLINGCOST:cost})});\r\n    }\r\n\r\n    setSellingCost(indx,dynamic,formData){\r\n        // dynamic[indx]=Object.assign({},dynamic[indx],activeInitial);\r\n        let cost=0;\r\n        dynamic.map(item=>{\r\n            cost=cost+parseFloat(item.COMPONENTS_WISE_SELLING_COST);\r\n        })\r\n\r\n        this.setState({formData:Object.assign({},formData,{SELLINGCOST:cost}),totalCost:cost});\r\n\r\n    }\r\n\r\n    setTotalDiscount(indx,dynamic,formData,activeInitial){\r\n                dynamic[indx]=Object.assign({},dynamic[indx],activeInitial);\r\n                let discount=0;\r\n                dynamic.map(item=>{\r\n                    discount=discount+parseInt(item.COMPONENTS_WISE_DISCOUNT_COMISSION);\r\n                })\r\n        \r\n                this.setState({formData:Object.assign({},formData,{OVER_ALL_DISCOUNT:discount}),totalDiscount:discount});\r\n        \r\n    }\r\n\r\n    setTotalTax(indx,dynamic,formData,activeInitial){\r\n        dynamic[indx]=Object.assign({},dynamic[indx],activeInitial);\r\n        let tax=0;\r\n        dynamic.map(item=>{\r\n            tax=tax+parseInt(item.TAX_CALCULATION);\r\n        })\r\n\r\n        this.setState({formData:Object.assign({},formData,{TOTAL_TAX_CALCULATION:tax}),totalTax:tax});\r\n\r\n}\r\n\r\n    submitData(formData,dynamic){\r\n        if(this.state.RA_REFERENCE.length===0){\r\n\r\n            notification['warning']({\r\n                message: 'Required field missing',\r\n                description: \"RA Reference can't be empty.\",\r\n              });\r\n            return;\r\n        }\r\n        else if(formData.RA_AGENT_CODE===undefined || formData.RA_AGENT_CODE.length===0){\r\n            notification['warning']({\r\n                message: 'Required field missing',\r\n                description: \"RA AGENT CODE can't be empty!\",\r\n              });\r\n\r\n            return;\r\n        }\r\n        /*else if(formData.OVER_ALL_PROFIT===undefined){\r\n            notification['warning']({\r\n                message: 'Required field missing',\r\n                description: \"Over All Profit can't be null!\",\r\n              });\r\n\r\n            return;\r\n        }*/\r\n        else if(formData.INVOICE_CURRENCY===undefined || formData.INVOICE_CURRENCY.length===0){\r\n            notification['warning']({\r\n                message: 'Required field missing',\r\n                description: \"Please select an Invoice Currency\",\r\n              });\r\n\r\n\r\n            return;\r\n        }\r\n        else if(formData.INVOICE_DATE===undefined || formData.INVOICE_DATE===null){\r\n            notification['warning']({\r\n                message: 'Required field missing',\r\n                description: \"Please select an Invoice Date\",\r\n              });\r\n\r\n            return;\r\n        }\r\n        else if(formData.EXCHANGE_RATE===undefined || parseInt(formData.EXCHANGE_RATE)<0){\r\n            console.log(formData.EXCHANGE_RATE)\r\n            notification['warning']({\r\n                message: 'Required field missing',\r\n                description: \"Exchange rate can't be empty\",\r\n              });\r\n\r\n\r\n            return;\r\n        }\r\n        else if(formData.CHECK_IN_DATE===undefined){\r\n            notification['warning']({\r\n                message: 'Required field missing',\r\n                description: \"Please set a check in date\",\r\n              });\r\n            return;\r\n        } \r\n        else if(formData.CHECK_OUT_DATE===undefined){\r\n            notification['warning']({\r\n                message: 'Required field missing',\r\n                description: \"Please set a check out date\",\r\n              });\r\n            return;\r\n        } \r\n        \r\n        else if(parseFloat(formData.SELLINGCOST)!==parseFloat(this.state.totalCost.toString())){\r\n            console.log(formData.SELLINGCOST,this.state.totalCost)\r\n            notification['warning']({\r\n                message: 'Required field missing',\r\n                description: \"Invalid selling cost\",\r\n              });\r\n\r\n            return;\r\n        }\r\n        else if(parseInt(formData.TOTAL_IN_AMOUNTS)<formData.SELLINGCOST){\r\n            notification['warning']({\r\n                message: 'Required field missing',\r\n                description: \"Invalid Total in amount\",\r\n              });\r\n\r\n            return; \r\n        }\r\n        else if(parseInt(formData.OVER_ALL_DISCOUNT)!==parseInt(this.state.totalDiscount!==null?this.state.totalDiscount.toString():0)){\r\n            notification['warning']({\r\n                message: 'Required field missing',\r\n                description: \"Invalid overall discount\",\r\n              });\r\n              \r\n            return;\r\n        }\r\n        else if(formData.SBU===undefined){\r\n            notification['warning']({\r\n                message: 'Required field missing',\r\n                description: \"SBU can't be empty\",\r\n              });\r\n\r\n            return;\r\n        }\r\n        else if(parseInt(formData.TOTAL_TAX_CALCULATION)!==parseInt(this.state.totalTax!==null?this.state.totalTax.toString():0)){\r\n            console.log(this.state.totalTax)\r\n            notification['warning']({\r\n                message: 'Required field missing',\r\n                description: \"Invalid tax calculation\",\r\n              });\r\n\r\n            return;\r\n        }\r\n        else if(parseInt(formData.TOTAL_IN_AMOUNTS)===0 || formData.TOTAL_IN_AMOUNTS===undefined || formData.TOTAL_IN_AMOUNTS===null){\r\n            notification['warning']({\r\n                message: 'Required field missing',\r\n                description: \"Total In Amount can't be empty\",\r\n              });\r\n\r\n            return;\r\n        }\r\n        else{\r\n            dynamic.map((item,idx)=>{\r\n                console.log(item)\r\n\r\n                if(item.SERVICE_COUNTRY.length===0){\r\n                    notification['warning']({\r\n                        message: 'Required field missing',\r\n                        description: \"Please select a service country!\",\r\n                      });\r\n        \r\n                    return;\r\n                }\r\n                else if(item.PER_SERVICE_WISE_SUPPLIER_NAME.length===0){\r\n                    console.log(item.PER_SERVICE_WISE_SUPPLIER_NAME)\r\n                    notification['warning']({\r\n                        message: 'Required field missing',\r\n                        description: \"Please select a Supplier!\",\r\n                      });\r\n        \r\n                    return;\r\n                }\r\n                else if(item.SERVICE_CATEGORY.length===0){\r\n                    message.warning(\"Please select a service category!\",0.9);\r\n                    return;\r\n                }\r\n                else if(item.PRODUCT_NAME.length===0){\r\n                    notification['warning']({\r\n                        message: 'Required field missing',\r\n                        description: \"PRODUCT NAME can't be empty\",\r\n                      });\r\n        \r\n        \r\n                    return;\r\n                }\r\n                else if(item.COMPONENTS_WISE_SELLING_COST.length===0){\r\n                    notification['warning']({\r\n                        message: 'Required field missing',\r\n                        description: \"Component wise selling cost can't be empty\",\r\n                      });\r\n        \r\n                    return;\r\n                }\r\n                else if(item.COMPONENTS_WISE_NET_COST===undefined){\r\n                    notification['warning']({\r\n                        message: 'Required field missing',\r\n                        description: \"Component wise net cost can't be empty\",\r\n                      });\r\n        \r\n                    return;\r\n                }\r\n                \r\n                else if(item.COMPONENTS_WISE_NET_COST_CURRENCY===undefined || item.COMPONENTS_WISE_NET_COST_CURRENCY===null ||  item.COMPONENTS_WISE_NET_COST_CURRENCY===0){\r\n                    console.log(\"item\",item.COMPONENTS_WISE_NET_COST_CURRENCY,\"state\",this.state.activeInitial.COMPONENTS_WISE_NET_COST_CURRENCY)\r\n                    notification['warning']({\r\n                        message: 'Required field missing',\r\n                        description: \"Component wise net cost currency can't be empty\",\r\n                      });\r\n                        this.setState({hasErr:true})\r\n\r\n                    return false;\r\n                }\r\n                else{\r\n                    formData.dynamic=[...dynamic];\r\n                    formData.dynamic.map((item,indx)=>{\r\n                        formData.dynamic[indx]['ismanual']=1;\r\n                    })\r\n                    formData.RA_REFERENCE=this.state.RA_REFERENCE;\r\n                    if(formData.msg!==undefined){\r\n                        delete formData.msg;\r\n                    }\r\n                    if(formData.success!==undefined){\r\n                        delete formData.success;\r\n                    }\r\n                    // console.log(formData)\r\n                    formData.RA_AGENT_CODE.trim();\r\n\r\n                   \r\n                    // alert(idx,dynamic.length-1)\r\n                   if(!this.state.hasErr && idx===dynamic.length-1){\r\n                     message.loading(\"Saving data....\",1.5)\r\n                    HttpService.post(\"bookingmaster/local/\"+this.state.RA_REFERENCE,{data:formData}).then(res=>{\r\n                        if(res.status===200){\r\n                            if(res.data.success){\r\n                                // this.props.history.push(\"/local/booking/\"+this.state.RA_REFERENCE);\r\n                                notification['success']({\r\n                                    message: 'Booking form data is submitted',\r\n                                    description: \"Data saved succesfully\",\r\n                                  });\r\n                                  var self=this;\r\n                                  setTimeout(function(){\r\n                                    window.location.href=\"/local/booking/\"+self.state.RA_REFERENCE\r\n\r\n                                  },1000)\r\n                            }\r\n                        }\r\n                    })\r\n                   }\r\n                }\r\n\r\n            })\r\n        }\r\n        \r\n    }\r\n\r\n    setOutDate(formData,dateString){\r\n        if(formData.CHECK_IN_DATE){\r\n            if(dateString>=formData.CHECK_IN_DATE){\r\n                this.setState({formData:Object.assign({},formData,{CHECK_OUT_DATE:dateString}),hasErr:false})\r\n            }\r\n            else{\r\n                notification['error']({\r\n                    message: 'Invalid Date',\r\n                    description: \"Invalid date selected!\",\r\n                  });\r\n                this.setState({hasErr:true})\r\n            }\r\n            \r\n        }\r\n        else{\r\n            notification['warning']({\r\n                message: 'Required Field missing',\r\n                description: \"Please enter check in date before proceeding\",\r\n              });\r\n              this.setState({hasErr:true})\r\n        }\r\n\r\n    }\r\n\r\n    setInDate(formData,dateString){\r\n        if(formData.CHECK_OUT_DATE){\r\n            if(dateString<=formData.CHECK_OUT_DATE){\r\n                this.setState({formData:Object.assign({},formData,{CHECK_IN_DATE:dateString}),hasErr:false})\r\n            }\r\n            else{\r\n                notification['error']({\r\n                    message: 'Invalid Date',\r\n                    description: \"Invalid date selected!\",\r\n                  });\r\n                this.setState({hasErr:true})\r\n            }\r\n            \r\n        }\r\n        else{\r\n            formData.CHECK_IN_DATE=dateString;\r\n            delete formData.CHECK_OUT_DATE;\r\n           this.setState({formData})\r\n        }\r\n\r\n    }\r\n\r\n    setModalValues(name,value){\r\n        this.setState({activeInitial:Object.assign({},this.state.activeInitial,{[name]:value})});\r\n    }\r\n\r\n\r\n    saveRow(activeRowData){\r\n        let {dynamic}=this.state;\r\n\r\n        dynamic[this.state.activeRowIndex]=Object.assign({},dynamic[this.state.activeRowIndex],activeRowData);\r\n        console.log( dynamic)\r\n        this.setState({dynamic,activeInitial:{},activeRowIndex:-1,modalVisible:false});\r\n    }\r\n\r\n    searchSupplier(value,indx,dynamic){\r\n        // console.log(value)\r\n        if(value.length>=3){\r\n            HttpService.get(\"api/supplier/search?search=\"+value).then(res=>{\r\n                if(res.status===200){\r\n                    let data=[]\r\n                res.data.supplier.map((item,indx)=>{\r\n                    // if(indx<20){\r\n                        data.push(item.supplier_display_name+\"~\"+item.supplier_id)\r\n\r\n                    // }\r\n                })\r\n                if(value!==undefined){\r\n                    dynamic[indx]['PER_SERVICE_WISE_SUPPLIER_NAME']=value.split(\"~\")[0]\r\n                    dynamic[indx]['PER_SERVICE_SUPPLIER_CODE']=value.split(\"~\")[1]\r\n     \r\n             }\r\n             else{\r\n                 dynamic[indx]['PER_SERVICE_WISE_SUPPLIER_NAME']=undefined;\r\n                 dynamic[indx]['PER_SERVICE_SUPPLIER_CODE']=\"\";\r\n             }\r\n                this.setState({suppliers:data,dynamic})\r\n                }\r\n            })\r\n        }\r\n        else{\r\n            dynamic[indx]['PER_SERVICE_WISE_SUPPLIER_NAME']=undefined;\r\n            dynamic[indx]['PER_SERVICE_SUPPLIER_CODE']=\"\";\r\n            this.setState({dynamic})\r\n\r\n        }\r\n    }\r\n\r\n  render() {\r\n      const {formData,dynamic,activeInitial}=this.state;\r\n    console.log(activeInitial)\r\n    return [\r\n        <header>\r\n        <div className=\"container-fluid\">\r\n            <div className=\"col-auto m-auto\">\r\n                <h3>Booking Entry</h3>\r\n            </div>\r\n        </div>\r\n    </header>,\r\n    <main>\r\n        <div className=\"container-fluid\">\r\n            <div className=\"row\">\r\n                <div className=\"col-4\">\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"\">RA Reference *</label>\r\n                        <input type=\"text\" className=\"form-control\" defaultValue={this.state.RA_REFERENCE} onChange={(e)=>this.setState({RA_REFERENCE:e.target.value})} id=\"\" placeholder=\"\" />\r\n                    </div>\r\n                </div>\r\n                <div className=\"col-4\">\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"\">RA Agent Code *</label><br/>\r\n                        {   formData.RA_AGENT_CODE!==null?\r\n                        <AutoComplete\r\n                        style={{ width: 380,left:'-0.5em' }}\r\n                        dataSource={this.state.agents}\r\n                        value={this.state.formData.RA_AGENT_CODE}\r\n                        onSelect={(value)=>{this.setState({formData:Object.assign({},formData,{RA_AGENT_CODE:value.split(\",\")[1].trim()})})}}\r\n                        onChange={(value)=>this.getAgentCode(formData,value)}\r\n                        className=\"form-control\"\r\n                        filterOption={(inputValue, option) => option.props.children.split(\",\")[0].toUpperCase().indexOf(inputValue.toUpperCase()) !== -1 || option.props.children.split(\",\")[1].toUpperCase().indexOf(inputValue.toUpperCase()) !== -1}\r\n                        />:\r\n                        <AutoComplete\r\n                        style={{ width: 380,left:'-0.5em' }}\r\n                        dataSource={this.state.agents}\r\n                        defaultValue={this.state.formData.RA_AGENT_CODE}\r\n                        onSelect={(value)=>{this.setState({formData:Object.assign({},formData,{RA_AGENT_CODE:value.split(\",\")[1].trim()})})}}\r\n                        onChange={(value)=>this.getAgentCode(formData,value)}\r\n                        className=\"form-control\"\r\n                        filterOption={(inputValue, option) => option.props.children.split(\",\")[0].toUpperCase().indexOf(inputValue.toUpperCase()) !== -1 || option.props.children.split(\",\")[1].toUpperCase().indexOf(inputValue.toUpperCase()) !== -1}\r\n                        />\r\n                        \r\n                        }\r\n                        {/* <input type=\"text\" className=\"form-control\" defaultValue={formData.RA_AGENT_CODE} onChange={(e)=>{formData.RA_AGENT_CODE=e.target.value;this.getAgentCode(e.target.value)}} id=\"\" placeholder=\"\" /> */}\r\n                    </div>\r\n                </div>\r\n                <div className=\"col-4\">\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"\">Invoice Number</label>\r\n                        <input type=\"text\" className=\"form-control\" defaultValue={formData.INVOICE_NUMBER} onChange={(e)=>{formData.INVOICE_NUMBER=e.target.value;}} id=\"\" placeholder=\"\" />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"row\">\r\n                <div className=\"col-4\">\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"\">First Name</label>\r\n                        <input type=\"text\" className=\"form-control\" defaultValue={formData.FIRSTNAME} onChange={(e)=>{formData.FIRSTNAME=e.target.value;}} id=\"\" placeholder=\"\" />\r\n                    </div>\r\n                </div>\r\n                <div className=\"col-4\">\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"\">Invoice Currency *</label>\r\n                        <div className=\"input-group mb-3\">\r\n                        <select className=\"form-control ng-pristine ng-valid ng-touched\" onChange={(e)=>{formData.INVOICE_CURRENCY=e.target.value;}} defaultValue=\"\">\r\n                                <option value=\"\">{this.props.match.params.ra_reference?formData.INVOICE_CURRENCY:\"Select Currency...\"}</option>\r\n                                {\r\n                                    this.state.currencies!==undefined?\r\n                                    this.state.currencies.map(currency=>{\r\n                                        return <option value={currency}>{currency}</option>\r\n                                    }):null\r\n                                }\r\n\r\n                            </select>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"col-4\">\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"\">Invoice Date *</label>\r\n                        <div className=\"input-group mb-3\">\r\n                            <DatePicker style={{width:'30em'}} value={formData.INVOICE_DATE?moment(formData.INVOICE_DATE, 'YYYY-MM-DD'):\"\"} format=\"YYYY-MM-DD\" onChange={(date,dateString)=>{this.setState({formData:Object.assign({},formData,{INVOICE_DATE:dateString})})}} placeholder=\"yyyy-mm-dd\" />\r\n                            {/* <div className=\"input-group-append\">\r\n                                <span className=\"input-group-text\" id=\"basic-addon2\"><i className=\"ion ion-md-calendar\"></i></span>\r\n                            </div> */}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"row\">\r\n                <div className=\"col-4\">\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"\">Exchange Rate *</label>\r\n                        <input type=\"number\" className=\"form-control\" min=\"0\" defaultValue={formData.EXCHANGE_RATE} onChange={(e)=>{formData.EXCHANGE_RATE=e.target.value}} id=\"\" placeholder=\"\" />\r\n                    </div>\r\n                </div>\r\n                <div className=\"col-4\">\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"\">Payment Deadline</label>\r\n                        <div className=\"input-group mb-3\">\r\n                            <DatePicker style={{width:'30em'}} value={formData.PAYMENT_DEADLINE?moment(formData.PAYMENT_DEADLINE, 'YYYY-MM-DD'):\"\"}  onChange={(date,dateString)=>{this.setState({formData:Object.assign({},formData,{PAYMENT_DEADLINE:dateString})})}} />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"col-4\">\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"\">Stand Alone</label>\r\n                        <select className=\"form-control\" value={formData.STAND_ALONE} onChange={(e)=>{formData.STAND_ALONE=e.target.value;this.setState({formData})}} >\r\n                            <option value=\"\">Choose one</option>\r\n                            {[{val:'Y',name:'YES'},{val:'N',name:'NO'}].map(itm=>{\r\n                                return <option value={itm.val}>{itm.name}</option>\r\n                            })}\r\n                        </select>\r\n                       \r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"row mb-5\">\r\n                <div className=\"col-4\">\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"\">SBU *</label>\r\n                        <select  className=\"form-control\" value={formData.SBU} onChange={(e)=>{formData.SBU=e.target.value;this.setState({formData})}}>\r\n                            <option value=\"\">Choose one</option>\r\n                            {['FIT','GROUP'].map(itm=>{\r\n                                return <option val={itm}>{itm}</option>\r\n                            })}\r\n                        </select>\r\n\r\n                    </div>\r\n                </div>\r\n                <div className=\"col-4\">\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"\">Lead Passanger</label>\r\n                        <input type=\"text\" className=\"form-control\" defaultValue={formData.LEAD_PASSENGER} onChange={(e)=>{formData.LEAD_PASSENGER=e.target.value}} id=\"\" placeholder=\"\" />\r\n                    </div>\r\n                </div>\r\n                <div className=\"col-4\">\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"\">Checkin Date *</label>\r\n                        <div className=\"input-group mb-3\">\r\n                            <DatePicker style={{width:'30em'}} value={formData.CHECK_IN_DATE?moment(formData.CHECK_IN_DATE, 'YYYY-MM-DD'):\"\"} format=\"YYYY-MM-DD\" onChange={(date,dateString)=>{this.setInDate(formData,dateString)}} placeholder=\"yyyy-mm-dd\" />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"col-4\">\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"\">Checkout Date *</label>\r\n                        <div className=\"input-group mb-3\">\r\n                            <DatePicker style={{width:'30em'}} value={formData.CHECK_OUT_DATE?moment(formData.CHECK_OUT_DATE, 'YYYY-MM-DD'):\"\"} format=\"YYYY-MM-DD\" onChange={(date,dateString)=>{this.setOutDate(formData,dateString)}} placeholder=\"yyyy-mm-dd\" />\r\n                           \r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n            {dynamic.map((item,indx)=>{\r\n               return <div className=\"row align-items-end\"  key={indx}>\r\n                <div className=\"col-2\">\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"\">Service Category *</label>\r\n                            <select className=\"form-control ng-pristine ng-valid ng-touched\" \r\n                            value={item.SERVICE_CATEGORY}\r\n                            onChange={(e)=>{dynamic[indx]['SERVICE_CATEGORY']=e.target.value;this.setState({dynamic})}}>\r\n                                <option value=\"\">{this.props.match.params.ra_reference?item.SERVICE_CATEGORY:\"Select a category\"}</option>\r\n                                <option value=\"Tour\">Tour</option>\r\n                                <option value=\"Hotel\">Hotel</option>\r\n                            </select>\r\n                          \r\n                       \r\n                      \r\n                    </div>\r\n                </div>\r\n                <div className=\"col-2\">\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"\">Product Name *</label>\r\n                        <input type=\"text\" className=\"form-control mb-4\" id=\"\" value={item.PRODUCT_NAME} onChange={(e)=>{dynamic[indx]['PRODUCT_NAME']=e.target.value;this.setState({dynamic})}} placeholder=\"\" />\r\n                       \r\n                        \r\n                    </div>\r\n                </div>\r\n                <div className=\"col-2\">\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"\" >Per Service Supplier Name *</label>\r\n                        {   item.PER_SERVICE_WISE_SUPPLIER_NAME!==undefined?\r\n                            item.PER_SERVICE_WISE_SUPPLIER_NAME.length>0?\r\n                        <AutoComplete\r\n                        style={{ width: 200,left:'-0.5em' }}\r\n                        dataSource={this.state.suppliers}\r\n                        value={item.PER_SERVICE_WISE_SUPPLIER_NAME}\r\n                        onSelect={(value)=>{this.setSupplierName(dynamic,value,indx)}}\r\n                                                onChange={(value)=>this.searchSupplier(value,indx,dynamic)}\r\n\r\n                        filterOption={(inputValue, option) => option.props.children.split(\"~\")[0].toUpperCase().indexOf(inputValue.toUpperCase()) !== -1 || option.props.children.split(\"~\")[1].toUpperCase().indexOf(inputValue.toUpperCase()) !== -1}\r\n                        />:\r\n                        <AutoComplete\r\n                        style={{ width: 200,left:'-0.5em' }}\r\n                        dataSource={this.state.suppliers}\r\n                        defaultValue={item.PER_SERVICE_WISE_SUPPLIER_NAME}\r\n                        onSelect={(value)=>{this.setSupplierName(dynamic,value,indx)}}\r\n \r\n                        onChange={(value)=>this.searchSupplier(value,indx,dynamic)}\r\n                        />:\r\n                        <AutoComplete\r\n                        style={{ width: 200,left:'-0.5em' }}\r\n                        dataSource={this.state.suppliers}\r\n                        defaultValue={item.PER_SERVICE_WISE_SUPPLIER_NAME}\r\n                        onSelect={(value)=>{this.setSupplierName(dynamic,value,indx)}}\r\n                        onChange={(value)=>this.searchSupplier(value,indx,dynamic)}\r\n                       \r\n                        />\r\n                        }\r\n                                            </div>\r\n                </div>\r\n                <div className=\"col-2\">\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"\">Components Wise Selling  *</label>\r\n                        \r\n                        <input type=\"number\" className=\"form-control mb-4\" value={item.COMPONENTS_WISE_SELLING_COST} onChange={(e)=>{dynamic[indx]['COMPONENTS_WISE_SELLING_COST']=e.target.value;this.setSellingCost(indx,dynamic,formData)}} id=\"\" placeholder=\"\" />\r\n                        \r\n                    </div>\r\n                </div>\r\n                <div className=\"col-3\">\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"\">Service Country *</label>\r\n                        \r\n                        {<div className=\"input-group mb-3\">\r\n                            <select className=\"form-control ng-pristine ng-valid ng-touched\" onChange={(e)=>{dynamic[indx].SERVICE_COUNTRY=e.target.value;this.setState({dynamic})}} value={item.SERVICE_COUNTRY}>\r\n                                <option value=\"\">{this.props.match.params.ra_reference?item.SERVICE_COUNTRY:\"Select Country...\"}</option>\r\n                                {this.state.countries!==undefined?this.state.countries.map((contryName)=>{\r\n                                    return <option value={contryName}>{contryName}</option>\r\n                                }):null}\r\n                            </select>\r\n                            </div>}\r\n                        \r\n                        \r\n                    </div>\r\n                </div>\r\n                {indx===dynamic.length-1?<div className=\"col-auto align-self-center mt-4\" >\r\n                    <div className=\"form-action-group d-flex align-items-center justify-content-between mb-3\">\r\n                        <button type=\"button\" className=\"btn btn-light mr-2\" onClick={()=>{this.openModal(indx)}} data-toggle=\"modal\" data-target=\"#exampleModalCenter\"><i\r\n                                className=\"ion ion-ios-more text-dark\"></i></button>\r\n                        <button type=\"button\" className=\"btn btn-light mr-2\" onClick={()=>{ this.setState({activeInitial:{}});this.cloneField(dynamic)}}><i\r\n                                className=\"ion ion-md-add text-primary\"></i></button>\r\n                        {indx>0?<button type=\"button\" className=\"btn btn-light\" onClick={()=>{this.deleteRow(dynamic,indx)}}><i\r\n                                className=\"ion ion-ios-trash text-danger\"></i></button>:null}\r\n                    </div>\r\n                    \r\n                    \r\n                </div>:<div className=\"col-auto align-self-center mt-5\" >\r\n                    <div className=\"form-action-group d-flex align-items-center justify-content-between mb-4\">\r\n                        <button type=\"button\" className=\"btn btn-light mr-2\" data-toggle=\"modal\" onClick={()=>{this.openModal(indx)}} data-target=\"#exampleModalCenter\"><i\r\n                                className=\"ion ion-ios-more text-dark\"></i></button>\r\n                        <button type=\"button\" className=\"btn btn-light\" onClick={()=>{this.deleteRow(dynamic,indx)}}><i\r\n                                className=\"ion ion-ios-trash text-danger\"></i></button>\r\n                    </div>\r\n                </div>\r\n                         }\r\n                \r\n            </div>\r\n            })}\r\n            \r\n            <div className=\"row\">\r\n                <div className=\"col-10\">\r\n                <div className=\"form-group row\">\r\n                        <label htmlFor=\"\" className=\"ml-auto col-auto col-form-label\">Selling Cost</label>\r\n                        <div className=\"col-2\">\r\n                            <input type=\"number\" min=\"0\" defaultValue={formData.SELLINGCOST} onChange={(e)=>{formData.SELLINGCOST=e.target.value;}} className=\"form-control\" />\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"form-group row\">\r\n                        <label htmlFor=\"\" className=\"ml-auto col-auto col-form-label\">Total In Amounts</label>\r\n                        <div className=\"col-2\">\r\n                            <input type=\"number\" defaultValue={formData.TOTAL_IN_AMOUNTS} onChange={(e)=>{formData.TOTAL_IN_AMOUNTS=e.target.value;formData.OVER_ALL_PROFIT=formData.TOTAL_IN_AMOUNTS-formData.SELLINGCOST;this.setState({formData})}}  className=\"form-control\" />\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"form-group row\">\r\n                        <label htmlFor=\"\" className=\"ml-auto col-auto col-form-label\">Over All Discounts</label>\r\n                        <div className=\"col-2\">\r\n                            <input type=\"number\" min=\"0\" defaultValue={formData.OVER_ALL_DISCOUNT} onChange={(e)=>{formData.OVER_ALL_DISCOUNT=e.target.value;}} className=\"form-control\" />\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"form-group row\">\r\n                        <label htmlFor=\"\" className=\"ml-auto col-auto col-form-label\">Total Tax Calculation</label>\r\n                        <div className=\"col-2\">\r\n                            <input type=\"number\" defaultValue={formData.TOTAL_TAX_CALCULATION} onChange={(e)=>{formData.TOTAL_TAX_CALCULATION=e.target.value;}} className=\"form-control\" />\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"form-group row\">\r\n                        <label htmlFor=\"\" className=\"ml-auto col-auto col-form-label\">Over All Profit</label>\r\n                        <div className=\"col-2\">\r\n                            <input type=\"number\" min=\"0\"  value={parseInt(formData.OVER_ALL_LOSS)===0 || formData.OVER_ALL_LOSS===null?formData.OVER_ALL_PROFIT:console.log('yeah')} onChange={(e)=>{this.setState({formData:Object.assign({},formData,{OVER_ALL_PROFIT:e.target.value})})}}  className=\"form-control\" />\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"form-group row\">\r\n                        <label htmlFor=\"\" className=\"ml-auto col-auto col-form-label\" >Over All Loss</label>\r\n                        <div className=\"col-2\">\r\n                            <input type=\"number\" min=\"0\" defaultValue={formData.OVER_ALL_PROFIT===0?formData.OVER_ALL_LOSS:0} onChange={(e)=>{formData.OVER_ALL_LOSS=e.target.value;}} className=\"form-control\"  />\r\n                        </div>\r\n                    </div>\r\n                    \r\n                    \r\n                </div>\r\n            </div>\r\n            <div style={{width: '100%', height: '150px'}}></div>\r\n            <div className=\"row align-items-end\">\r\n                <div className=\"col-6\">\r\n                    <div className=\"form-group mb-0\">\r\n                        <label htmlFor=\"exampleFormControlTextarea1\">Booking Note</label>\r\n                        <textarea className=\"form-control\" value={formData.BOOKING_NOTES} onChange={(e)=>{formData.BOOKING_NOTES=e.target.value}} id=\"exampleFormControlTextarea1\" rows=\"5\"\r\n                            style={{resize: 'none'}}></textarea>\r\n                    </div>\r\n                </div>\r\n                \r\n                <div className=\"col-1 text-right\">\r\n                    <button type=\"submit\" className=\"btn btn-primary w-100\"  onClick={()=>{this.submitData(formData,dynamic)}}>Save</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n        {/* <!-- Modal --> */}\r\n  \r\n            <Modal\r\n             visible={this.state.modalVisible} \r\n             width={900} footer={[]}\r\n              onCancel={()=>this.setState({modalVisible:false,activeRowIndex:-1,activeInitial:{}})}\r\n              >\r\n            <div className=\"modal-dialog modal-lg modal-dialog-centered\" role=\"document\">\r\n                <div className=\"modal-content\">\r\n                    \r\n                    <div className=\"modal-body\">\r\n\r\n                            <div className=\"tab-pane fade show active\" id=\"supplier\" role=\"tabpanel\" aria-labelledby=\"supplier-tab\">\r\n                                <div className=\"container-fluid\">\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-6\">\r\n                                            <div className=\"form-group\">\r\n                                                <label htmlFor=\"\">Service City</label>\r\n                                                <Input type=\"text\" value={this.state.activeInitial.SERVICE_CITY} onChange={(e)=>{this.setModalValues('SERVICE_CITY',e.target.value);}} className=\"form-control\" placeholder=\"\" />\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"col-6\">\r\n                                            <div className=\"form-group\">\r\n                                                <label htmlFor=\"\">Tax Calculation</label>\r\n                                                <Input type=\"number\" value={activeInitial.TAX_CALCULATION} onChange={(e)=>{activeInitial.TAX_CALCULATION=e.target.value;this.setTotalTax(this.state.activeRowIndex,dynamic,formData,activeInitial)}} className=\"form-control\" placeholder=\"\" />\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    \r\n                                    <div className=\"row\">\r\n                                        {/* <div className=\"col-6\">\r\n                                            <div className=\"form-group\">\r\n                                                <label htmlFor=\"\">Foreign Currency</label>\r\n                                                <Select className=\"form-control ng-pristine ng-valid ng-touched\" \r\n                                                    value={activeInitial.FOREIGN_CURRENCY} onChange={(e)=>{this.setState({activeInitial:Object.assign({},activeInitial,{FOREIGN_CURRENCY:e})})}}\r\n                                                >\r\n                                                   \r\n                                                    {\r\n                                                        this.state.currencies.map(item=>{\r\n                                                            return <Option value={item}>{item}</Option>\r\n                                                        })\r\n                                                    }\r\n\r\n                                                </Select>\r\n                                            </div>\r\n                                        </div> */}\r\n                                        <div className=\"col-6\">\r\n                                            <div className=\"form-group\">\r\n                                                <label htmlFor=\"\">City</label>\r\n                                                <Input type=\"text\" className=\"form-control\"\r\n                                                    value={activeInitial.SERVICE_CITY} onChange={(e)=>{activeInitial.SERVICE_CITY=e.target.value}}\r\n                                                 id=\"\" placeholder=\"\" />\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"col-6\">\r\n                                            <div className=\"form-group\">\r\n                                                <label htmlFor=\"\">Components Wise Markup</label>\r\n                                                <Input type=\"number\" min=\"0\" className=\"form-control\" value={activeInitial.COMPONENTS_WISE_MARKUP} onChange={(e)=>{this.setState({activeInitial:Object.assign({},activeInitial,{COMPONENTS_WISE_MARKUP:e.target.value})})}} id=\"\" placeholder=\"\" />\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-6\">\r\n                                            <div className=\"form-group\">\r\n                                                <label htmlFor=\"\">Component Wise Net Cost *</label>\r\n                                                <Input type=\"number\" value={activeInitial.COMPONENTS_WISE_NET_COST} onChange={(e)=>{activeInitial.COMPONENTS_WISE_NET_COST=e.target.value;this.setState({activeInitial:Object.assign({},this.state.activeInitial,activeInitial)})}} className=\"form-control\" id=\"\" placeholder=\"\" />\r\n                                            </div>\r\n                                        </div>\r\n                                        <div classsName=\"col-6\">\r\n                                            <div className=\"form-group\">\r\n                                                <label htmlFor=\"\">Components Wise Net Cost Currency *</label>\r\n                                                <Select \r\n                                                className=\"form-control ng-pristine ng-valid ng-touched\"\r\n                                                value={activeInitial.COMPONENTS_WISE_NET_COST_CURRENCY} onChange={(e)=>{activeInitial.COMPONENTS_WISE_NET_COST_CURRENCY=e;activeInitial.COMPONENTS_WISE_CURRENCY=e;this.setState({activeInitial:Object.assign({},this.state.activeInitial,activeInitial),hasErr:false})}}\r\n                                                >   \r\n                                                    {\r\n                                                        this.state.currencies.map(item=>{\r\n                                                            return <Option value={item}>{item}</Option>\r\n                                                        })\r\n                                                    }\r\n\r\n                                                </Select>\r\n                                                \r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    \r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-6\">\r\n                                            <div className=\"form-group mb-0\">\r\n                                                <label htmlFor=\"\">Booking Reference(RA File Handler)</label>\r\n                                                <Input type=\"text\" value={activeInitial.RA_FILE_HANDLER} onChange={(e)=>{activeInitial.RA_FILE_HANDLER=e.target.value;this.setState({activeInitial})}} className=\"form-control\" id=\"\" placeholder=\"\" />\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"col-6\">\r\n                                            <div className=\"form-group mb-0\">\r\n                                                <label htmlFor=\"\">Payment Slabs</label>\r\n                                                <Input type=\"text\" value={activeInitial.PAYMENT_SLABS} onChange={(e)=>{activeInitial.PAYMENT_SLABS=e.target.value}} className=\"form-control\" id=\"\" placeholder=\"\"/>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-6\">\r\n                                            <div className=\"form-group mb-0\">\r\n                                                <label htmlFor=\"\">Supplier Payment Deadline</label>\r\n                                                <div className=\"input-group-mb6\">\r\n                                                <DatePicker format=\"YYYY-MM-DD\" \r\n                                                        value={activeInitial.SUPPLIER_PAYMENT_DEADLINE?moment(activeInitial.SUPPLIER_PAYMENT_DEADLINE):null} \r\n                                                        onChange={(date,dateString)=>{activeInitial.SUPPLIER_PAYMENT_DEADLINE=dateString;this.setState({activeInitial:Object.assign({},activeInitial,{SUPPLIER_PAYMENT_DEADLINE:dateString})})}}\r\n                                                    style={{width:\"25.5em\"}}\r\n                                                />\r\n\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"col-6\">\r\n                                            <div className=\"form-group mb-0\">\r\n                                                <label htmlFor=\"\">Component Wise Discount Comission</label>\r\n                                                <Input type=\"number\" value={activeInitial.COMPONENTS_WISE_DISCOUNT_COMISSION} onChange={(e)=>{activeInitial.COMPONENTS_WISE_DISCOUNT_COMISSION=e.target.value;this.setTotalDiscount(this.state.activeRowIndex,dynamic,formData,activeInitial)}} className=\"form-control\" id=\"\" placeholder=\"\"/>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"row\">\r\n                                        {/* <div className=\"col-6\">\r\n                                            <div className=\"form-group\">\r\n                                                <label htmlFor=\"\">Component Wise Currency</label>\r\n                                                <Select \r\n                                                className=\"form-control ng-pristine ng-valid ng-touched\"\r\n                                                value={activeInitial.COMPONENTS_WISE_CURRENCY} onChange={(e)=>{dynamic[this.state.activeRowIndex].COMPONENTS_WISE_CURRENCY=e;this.setState({activeInitial:Object.assign({},activeInitial,{COMPONENTS_WISE_CURRENCY:e})})}}\r\n                                                >\r\n                                                    {\r\n                                                        this.state.currencies.map(item=>{\r\n                                                            return <Option value={item}>{item}</Option>\r\n                                                        })\r\n                                                    }\r\n\r\n                                                </Select>\r\n                                            </div>\r\n                                        </div> */}\r\n                                        <div className=\"col-6\">\r\n                                            <div className=\"form-group mb-0\">\r\n                                                <label htmlFor=\"\">Arrival Date</label>\r\n                                                <div className=\"input-group-mb6\">\r\n                                                <DatePicker format=\"YYYY-MM-DD\" \r\n                                                        value={activeInitial.ARRIVALDATE?moment(activeInitial.ARRIVALDATE, 'YYYY-MM-DD'):\"\"} \r\n                                                        onChange={(date,dateString)=>{activeInitial.ARRIVALDATE=dateString;this.setState({activeInitial:Object.assign({},activeInitial,{ARRIVALDATE:dateString})})}}\r\n                                                    style={{width:\"25.5em\"}}\r\n                                                />\r\n\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        \r\n                                    </div>\r\n                                    <div className=\"row\">\r\n                                        {/* <div className=\"col-6\">\r\n                                            <div className=\"form-group mb-0\">\r\n                                                <label htmlFor=\"\">Arrival Date</label>\r\n                                                <div className=\"input-group-mb6\">\r\n                                                <DatePicker format=\"YYYY-MM-DD\" \r\n                                                        value={activeInitial.ARRIVALDATE?moment(activeInitial.ARRIVALDATE, 'YYYY-MM-DD'):\"\"} \r\n                                                        onChange={(date,dateString)=>{activeInitial.ARRIVALDATE=dateString;this.setState({activeInitial:Object.assign({},activeInitial,{ARRIVALDATE:dateString})})}}\r\n                                                    style={{width:\"25.5em\"}}\r\n                                                />\r\n\r\n                                                </div>\r\n                                            </div>\r\n                                        </div> */}\r\n                                        \r\n                                    </div>\r\n                                </div>\r\n                            {/* </div> */}\r\n                           \r\n                        </div>\r\n                    </div>\r\n                    <div className=\"modal-footer\">\r\n                        <button type=\"button\" className=\"btn btn-primary\" onClick={()=>{this.saveRow(activeInitial)}}>Save</button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            </Modal>\r\n\r\n        </main>\r\n    ]\r\n  }\r\n}\r\n\r\n\r\n\r\nexport default withRouter(Form);\r\n","import React, { Component } from 'react'\r\nimport {withRouter} from 'react-router-dom';\r\nimport 'antd/dist/antd.css';\r\nimport './form.css'\r\nimport { Card,Select, Row, Col, Button, notification } from 'antd';\r\n\r\nimport HttpService from '../services/HttpService';\r\nconst Option = Select.Option;\r\n\r\nclass InvoiceRuleform extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state={\r\n            dynamicId:\"\",\r\n            countryList:[],\r\n            partList:[],\r\n            sbuList:[],\r\n            defaultValues:{\r\n              company_id:'',\r\n              party_id : '',\r\n              party_name:'',\r\n              sbu_id : '',\r\n              invoice_date :''\r\n            },\r\n            mode : '',\r\n        }\r\n    }\r\n\r\n\r\n    componentWillMount(){\r\n        if(this.props.match.params.id){\r\n            this.setState({\r\n              dynamicId:this.props.match.params.id,\r\n              mode : 'edit'\r\n            });\r\n       }\r\n       else{\r\n        this.setState({\r\n          mode : 'new'\r\n        });\r\n       }\r\n    }\r\n\r\n    getCompanyName =()=>{\r\n      return new Promise((resolve,reject)=>{\r\n        HttpService.get(`api/service/countrywithid/getall`).then((data)=>{\r\n          this.setState((state,props)=>{\r\n            return({\r\n              countryList : data.data.suppliercountry\r\n            })\r\n          })\r\n          resolve();\r\n        })\r\n        .catch((error)=>{\r\n          notification['warning']({\r\n            message: 'Error',\r\n            description: \"Unable to fetch Country list\",\r\n          });\r\n          resolve();\r\n        })\r\n      })\r\n    }\r\n\r\n    getSbu =()=>{\r\n      return new Promise((resolve,reject)=>{ \r\n        HttpService.get(`api/sbu/getall`).then((data)=>{\r\n          this.setState((state,props)=>{\r\n            return({\r\n              sbuList : data.data.sbu\r\n            })\r\n          })\r\n          resolve();\r\n        })\r\n        .catch((error)=>{\r\n          notification['warning']({\r\n            message: 'Error',\r\n            description: \"Unable to fetch Sbu list\",\r\n          });\r\n          resolve();\r\n        })\r\n      })\r\n    }\r\n\r\n\r\n\r\n    handleSearchParty = (value)=>{\r\n      if(value.length>=3){\r\n        HttpService.get(`api/supplier/search?search=${value}`).then((data)=>{\r\n          this.setState((state,props)=>{\r\n            return({\r\n              partList : data.data.supplier\r\n            })\r\n          })\r\n        })\r\n        .catch((error)=>{\r\n          notification['warning']({\r\n            message: 'Error',\r\n            description: \"Unable to fetch Supplier list\",\r\n          });\r\n          return;\r\n        })\r\n      }\r\n      else{\r\n        return;\r\n      }\r\n    }\r\n\r\n\r\n    mapParty=(id)=>{\r\n      for(var i=0;i<this.state.partList.length;i++){\r\n        if(this.state.partList[i].supplier_id==id){\r\n          return this.state.partList[i].supplier_display_name;\r\n        }\r\n      }\r\n    }\r\n\r\n    handleChangeParty = (value)=>{\r\n      var nm = this.mapParty(value);\r\n      this.setState((state,props)=>{\r\n        return({\r\n          ...state,\r\n          defaultValues:{\r\n            ...state.defaultValues,\r\n            party_id : value,\r\n            party_name:nm\r\n          }\r\n        });\r\n      })   \r\n      console.log(this.state);   \r\n    }\r\n\r\n    handleCompanyChange = (value)=>{\r\n      this.setState((state,props)=>{\r\n        return({\r\n          ...state,\r\n          defaultValues:{\r\n            ...state.defaultValues,\r\n            company_id : value\r\n          }\r\n        });\r\n      })  \r\n      console.log(this.state);\r\n    }\r\n\r\n\r\n    handleSbuChange = (value)=>{\r\n      this.setState((state,props)=>{\r\n        return({\r\n          ...state,\r\n          defaultValues:{\r\n            ...state.defaultValues,\r\n            sbu_id : value\r\n          }\r\n        });\r\n      })\r\n      console.log(this.state);\r\n    }\r\n\r\n    handledateChange = (value)=>{\r\n      this.setState((state,props)=>{\r\n        return({\r\n          ...state,\r\n          defaultValues:{\r\n            ...state.defaultValues,\r\n            invoice_date : value\r\n          }\r\n        });\r\n      })\r\n      console.log(this.state);\r\n    }\r\n\r\n\r\n    getExistingdata = ()=>{\r\n      return new Promise((resolve,reject)=>{\r\n        if(this.state.mode==='edit'){\r\n          HttpService.get(`invoicerule/form?id=${this.state.dynamicId}`).then((data)=>{\r\n            HttpService.get(`api/supplier/search?search=${data.data[0].party_id}`).then((da)=>{\r\n              this.setState((state,props)=>{\r\n                return({\r\n                  ...state,\r\n                  defaultValues:{\r\n                    company_id:data.data[0].company_id,\r\n                    party_id : data.data[0].party_id,\r\n                    party_name:da.data.supplier[0].supplier_display_name,\r\n                    sbu_id : data.data[0].sbu_id,\r\n                    invoice_date :data.data[0].invoice_date\r\n                  }\r\n                })\r\n              })\r\n              resolve();\r\n            })\r\n            .catch((error)=>{\r\n              notification['warning']({\r\n                message: 'Error',\r\n                description: \"Invalid Id\",\r\n              });\r\n              this.setState((state,props)=>{\r\n                return({\r\n                  dynamicId : '',\r\n                  mode : 'new'\r\n                })\r\n              })\r\n            })\r\n            reject();\r\n            \r\n          })\r\n          .catch((error)=>{\r\n            notification['warning']({\r\n              message: 'Error',\r\n              description: \"Invalid Id\",\r\n            });\r\n            this.setState((state,props)=>{\r\n              return({\r\n                dynamicId : '',\r\n                mode : 'new'\r\n              })\r\n            })\r\n          })\r\n          reject();\r\n        }\r\n        else{\r\n          resolve()\r\n        }\r\n      })\r\n      \r\n    }\r\n\r\n\r\n    componentDidMount(){\r\n      var p1 = this.getCompanyName();\r\n      var p2 = this.getSbu();\r\n      Promise.all([p1,p2]).then(data=>{\r\n        this.getExistingdata().then(()=>{\r\n          console.log(this.state);\r\n        }).catch((err)=>{\r\n          return;\r\n        })\r\n      }).catch(error=>{\r\n        notification['warning']({\r\n          message: 'Error',\r\n          description: \"Server error\",\r\n        });\r\n      })\r\n    }\r\n\r\n\r\n\r\n\r\n    savedata = ()=>{\r\n      if(this.state.defaultValues.company_id==='' || this.state.defaultValues.party_id==='' || this.state.defaultValues.sbu_id==='' || this.state.defaultValues.invoice_date===''){\r\n        notification['warning']({\r\n          message: 'Error',\r\n          description: \"All the fields are required\",\r\n        });\r\n        return;\r\n      }\r\n      else{\r\n        if(this.state.mode==='new'){\r\n          var raw={\r\n            ...this.state.defaultValues\r\n          }\r\n        }\r\n        else{\r\n          var raw = {\r\n            ...this.state.defaultValues,\r\n            id: this.state.dynamicId\r\n          }\r\n        }\r\n        HttpService.post(`invoicerule/form?id=${this.state.dynamicId}`,raw).then((data)=>{\r\n          console.log(data.data.id)\r\n          notification['warning']({\r\n            message: 'Success',\r\n            description: \"Data Saved\",\r\n          });\r\n          setTimeout(function(){\r\n            window.location.href=\"/invoicerule/data/form/\"+data.data.id\r\n          },300)\r\n        }).catch((error)=>{\r\n          notification['warning']({\r\n            message: 'Error',\r\n            description: \"Error saving data\",\r\n          });\r\n          return;\r\n        })\r\n      }\r\n    }\r\n\r\n  render() {\r\n    return (\r\n      <div style={{ background: '#F5F5F5',height:'100vh',padding:'40px', width:'100%' }}>\r\n      <a className=\"back-button\" href=\"/\"><i class=\"fas fa-home\"></i></a>\r\n        <Card \r\n            title=\"INVOICE RULE\" \r\n            bordered={false} \r\n            style={{ width: '50%',marginLeft:'25%' }}\r\n            headStyle={{background:'#4179ef', color:'#fff'}}\r\n        >\r\n          <div style={{ padding:'20px' }}>\r\n            <Row style={{ paddingBottom:'20px' }} >\r\n              <Col span={8}>\r\n                <p>Company Name : </p>\r\n              </Col>\r\n              <Col span={16}>\r\n                <Select defaultValue={this.state.defaultValues.company_id} value={this.state.defaultValues.company_id} style={{ width:'100%' }} onChange={this.handleCompanyChange }>\r\n                  <Option value=\"\">Select any option..</Option>\r\n                  {\r\n                    (this.state.countryList).map((d,i)=>{\r\n                      return(<Option key={i} value={d.id}>{d.name}</Option>)\r\n                    })\r\n                  }\r\n                </Select>\r\n              </Col>\r\n            </Row>\r\n            <Row style={{ paddingBottom:'20px' }}>\r\n              <Col span={8}>\r\n                <p>Party Name : </p>\r\n              </Col>\r\n              <Col span={16}>\r\n              <Select\r\n                showSearch\r\n                value={this.state.defaultValues.party_name}\r\n                placeholder=\"search\"\r\n                style={{ width:'100%' }}\r\n                defaultActiveFirstOption={false}\r\n                showArrow={false}\r\n                filterOption={false}\r\n                onSearch={this.handleSearchParty}\r\n                onChange={this.handleChangeParty}\r\n                notFoundContent={null}\r\n              >\r\n                {\r\n                  this.state.partList.map((d,i) => <Option key={i} value={d.supplier_id}>{d.supplier_display_name}</Option>)\r\n                }\r\n              </Select>\r\n              </Col>\r\n            </Row>\r\n            <Row style={{ paddingBottom:'20px' }}>\r\n              <Col span={8}>\r\n                <p>SBU : </p>\r\n              </Col>\r\n              <Col span={16}>\r\n                <Select defaultValue={this.state.defaultValues.sbu_id} value={this.state.defaultValues.sbu_id} style={{ width:'100%' }} onChange={this.handleSbuChange }>\r\n                  <Option value=\"\">Select any option..</Option>\r\n                  {\r\n                    (this.state.sbuList).map((d,i)=>{\r\n                      return(<Option key={i} value={d.id}>{d.sbu}</Option>)\r\n                    })\r\n                  }\r\n                </Select>\r\n              </Col>\r\n            </Row>\r\n            <Row style={{ paddingBottom:'20px' }}>\r\n              <Col span={8}>\r\n                <p>Invoice Date : </p>\r\n              </Col>\r\n              <Col span={16}>\r\n                <Select defaultValue={this.state.defaultValues.invoice_date} value={this.state.defaultValues.invoice_date} style={{ width:'100%' }} onChange={this.handledateChange }>\r\n                  <Option value=\"\">Select any option..</Option>\r\n                  <Option value=\"check_in_date\">Check In Date</Option>\r\n                  <Option value=\"check_out_date\">Check Out Date</Option>\r\n                  <Option value=\"invoice_date\">Invoice Date</Option>\r\n                  <Option value=\"manual\">Manual</Option>\r\n                </Select>\r\n              </Col>\r\n            </Row>\r\n            <div style={{float :'right'}}>\r\n             <Button type=\"primary\" loading={this.state.loading} onClick={this.savedata}>\r\n                Save\r\n              </Button>\r\n            </div>\r\n          \r\n          </div>\r\n        </Card>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\n\r\nexport default withRouter(InvoiceRuleform);","import React, { Component } from 'react'\r\nimport {BrowserRouter as Router,Route} from 'react-router-dom';\r\nimport Form from './form';\r\nimport InvoiceRuleform from './invoicerule/form';\r\n\r\nexport default class App extends Component {\r\n  render() {\r\n    return (\r\n      <Router>\r\n        {/* <Route exact path=\"/\" component={()=>(<div>RealBooks</div>)} /> */}\r\n        <Route exact path=\"/local/booking\" component={Form} />\r\n        <Route exact path=\"/local/booking/:ra_reference\" component={Form} />\r\n        <Route exact path=\"/invoicerule/data/form\" component={InvoiceRuleform} />\r\n        <Route exact path=\"/invoicerule/data/form/:id\" component={InvoiceRuleform} />\r\n      </Router>\r\n    )\r\n  }\r\n}\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n// import './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}