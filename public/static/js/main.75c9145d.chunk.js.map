{"version":3,"sources":["services/HttpService.js","form.js","invoicerule/form.js","App.js","serviceWorker.js","index.js"],"names":["HttpService","get","url","arguments","length","undefined","Promise","resolve","reject","axios","then","response","catch","error","post","data","Option","Select","Form","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","submitData","formData","dynamic","state","RA_REFERENCE","notification","message","description","RA_AGENT_CODE","STAND_ALONE","INVOICE_CURRENCY","INVOICE_DATE","EXCHANGE_RATE","parseInt","console","log","CHECK_IN_DATE","CHECK_OUT_DATE","parseFloat","SELLINGCOST","totalCost","toString","TOTAL_IN_AMOUNTS","OVER_ALL_DISCOUNT","totalDiscount","SBU","TOTAL_TAX_CALCULATION","totalTax","map","item","idx","SERVICE_COUNTRY","PER_SERVICE_WISE_SUPPLIER_NAME","SERVICE_CATEGORY","warning","PRODUCT_NAME","COMPONENTS_WISE_SELLING_COST","COMPONENTS_WISE_NET_COST","COMPONENTS_WISE_NET_COST_CURRENCY","activeInitial","setState","hasErr","name","modalVisible","suppliers","countries","isEdit","currencies","agents","activeRowIndex","OVER_ALL_LOSS","OVER_ALL_PROFIT","dynamic_formData","PER_SERVICE_SUPPLIER_CODE","value","_this2","res","status","customer","indx","push","customer_name","client_ref_no","split","match","params","ra_reference","activeObj","SERVICE_CITY","TAX_CALCULATION","FOREIGN_CURRENCY","COMPONENTS_WISE_MARKUP","COMPONENTS_WISE_DISCOUNT_COMISSION","RA_FILE_HANDLER","PAYMENT_SLABS","SUPPLIER_PAYMENT_DEADLINE","COMPONENTS_WISE_CURRENCY","ARRIVALDATE","getCountries","getCurrency","document","title","getActiveBooking","_this$state","assign","id","_this3","success","_this4","suppliercountry","_this5","currency","trim","ismanual","splice","cost","discount","tax","_this6","valid","toConsumableArray","msg","loading","self","setTimeout","window","location","href","err","dateString","defineProperty","activeRowData","_this$state2","pop","_this7","supplier","supplier_display_name","supplier_id","_this8","_this$state3","react_default","a","createElement","className","htmlFor","readOnly","disabled","type","defaultValue","onChange","e","target","placeholder","auto_complete","style","width","left","dataSource","onSelect","getAgentCode","filterOption","inputValue","option","children","toUpperCase","indexOf","INVOICE_NUMBER","FIRSTNAME","date_picker","moment","format","date","min","PAYMENT_DEADLINE","clearList","val","itm","LEAD_PASSENGER","setInDate","setOutDate","key","setSupplierName","searchSupplier","setSellingCost","contryName","display","onClick","openModal","data-toggle","data-target","cloneField","deleteRow","height","BOOKING_NOTES","rows","resize","SaveData","modal","visible","footer","onCancel","role","aria-labelledby","input","setModalValues","setTotalTax","classsName","es_select","setTotalDiscount","saveRow","Component","withRouter","InvoiceRuleform","getCompanyName","countryList","getSbu","sbuList","sbu","handleSearchParty","concat","partList","mapParty","i","handleChangeParty","nm","objectSpread","defaultValues","party_id","party_name","handleCompanyChange","company_id","handleSbuChange","sbu_id","handledateChange","invoice_date","getExistingdata","mode","dynamicId","da","savedata","raw","p1","p2","all","background","padding","class","card","bordered","marginLeft","headStyle","color","row","paddingBottom","col","span","form_Option","d","showSearch","defaultActiveFirstOption","showArrow","onSearch","notFoundContent","float","es_button","App","react_router_dom","react_router","exact","path","component","Boolean","hostname","ReactDOM","render","App_App","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.75c9145d.chunk.js","sourcesContent":["import axios from 'axios';\r\nconst envoirnment = process.env.NODE_ENV;\r\n// const defaultVersion = 'v1';\r\nconst api_url = envoirnment==='development'?'http://localhost:5000':'';\r\n\r\nclass Httpservice{\r\n  \r\n    get = (url=\"\") => new Promise((resolve,reject)=>{\r\n        // var headers = {\r\n        //     'Authorization': \"Bearer \"+token\r\n        // };\r\n       \r\n        axios.get(api_url+'/'+url)\r\n        .then(function(response){\r\n            resolve(response);\r\n        })\r\n        .catch(function(error){\r\n            reject(error)\r\n        });\r\n    })\r\n    \r\n\r\n    post = (url,data) => new Promise((resolve,reject)=>{\r\n        // var headers = {\r\n        //     'Authorization': \"Bearer \"+token\r\n        // };\r\n       \r\n        axios.post(api_url+'/'+url,data)\r\n            .then(function (response) {\r\n                resolve(response);\r\n            })\r\n            .catch(function (error) {\r\n                reject(error);\r\n            });\r\n    })\r\n\r\n\r\n    // postFile = (url,data,token,version=defaultVersion) => new Promise((resolve,reject)=>{\r\n    //     axios.post(api_url+version+'/'+url,data,{headers: {'Authorization': \"Bearer \"+token, 'content-type': 'multipart/form-data' }})\r\n    //         .then(function (response) {\r\n    //             resolve(response);\r\n    //         })\r\n    //         .catch(function (error) {\r\n    //             reject(error);\r\n    //         });\r\n    // })\r\n\r\n    // putFile = (url,data,type)=>new Promise((resolve,reject)=>{\r\n       \r\n    //    var options = {\r\n    //         headers: {\r\n    //             'Content-Type': type\r\n    //           },\r\n    //           onUploadProgress: function(progressEvent) {\r\n    //             var percentCompleted = Math.round( (progressEvent.loaded * 100) / progressEvent.total );\r\n    //             GlobalStore.fileUploadPercentage=percentCompleted;\r\n    //           }\r\n    //     }\r\n        \r\n    //     axios.put(url,data,options).then(response=>{\r\n            \r\n    //         resolve(response)\r\n    //     }).catch(error=>{\r\n    //         reject(error);\r\n    //     })\r\n    // })\r\n   \r\n    \r\n\r\n  \r\n}\r\n\r\nexport default new Httpservice();\r\n// https://redappletravel.realbooks.in/api/","import React, { Component } from 'react'\r\nimport axios from 'axios';\r\nimport 'antd/dist/antd.css';\r\nimport './App.css';\r\nimport { Select,DatePicker, message,notification, AutoComplete, Modal, Input, InputNumber } from 'antd';\r\nimport {withRouter} from 'react-router-dom';\r\nimport moment from 'moment';\r\nimport HttpService from './services/HttpService';\r\n\r\nconst Option = Select.Option;\r\n\r\n\r\n\r\nclass Form extends Component {\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state={\r\n            name:\"\",\r\n            modalVisible:false,\r\n            suppliers:[],\r\n            activeInitial:{},\r\n            countries:[],\r\n            isEdit:false,\r\n            hasErr:false,\r\n            currencies:[],\r\n            RA_REFERENCE:\"\",\r\n            agents:[],\r\n            activeRowIndex:-1,\r\n            formData:{OVER_ALL_DISCOUNT:0,TOTAL_TAX_CALCULATION:0,OVER_ALL_LOSS:0,OVER_ALL_PROFIT:0},\r\n            dynamic:[],\r\n            totalTax:0,\r\n            totalDiscount:0,\r\n            totalCost:0,\r\n            dynamic_formData:{\r\n                SERVICE_CATEGORY:\"\",\r\n                PRODUCT_NAME:\"\",\r\n                PER_SERVICE_WISE_SUPPLIER_NAME:\"\",\r\n                COMPONENTS_WISE_SELLING_COST:\"\",\r\n                PER_SERVICE_SUPPLIER_CODE:\"\",\r\n                SERVICE_COUNTRY:\"\"\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n    getAgentCode(formData,value){\r\n        // /api/customer/search?search=\r\n         if(value.length>=3){\r\n            HttpService.get(\"api/customer/search?search=\"+value).then(res=>{\r\n                if(res.status===200){\r\n                    console.log(res.data)\r\n                    let data=[]\r\n                res.data.customer.map((item,indx)=>{\r\n                    \r\n                        data.push(item.customer_name+\",\"+item.client_ref_no)\r\n\r\n                })\r\n                if(value!==undefined){\r\n                    // dynamic[indx]['PER_SERVICE_WISE_SUPPLIER_NAME']=value.split(\",\")[0]\r\n                    formData['RA_AGENT_CODE']=value.split(\",\")[1]\r\n     \r\n             }\r\n             else{\r\n                 formData['RA_AGENT_CODE']=null;\r\n                //  dynamic[indx]['PER_SERVICE_SUPPLIER_CODE']=\"\";\r\n             }\r\n                this.setState({agents:data,formData})\r\n                }\r\n            })\r\n        }\r\n        else{\r\n            formData['RA_AGENT_CODE']=null;\r\n            // dynamic[indx]['PER_SERVICE_SUPPLIER_CODE']=\"\";\r\n            this.setState({formData})\r\n\r\n        }\r\n    }\r\n\r\n    openModal(indx){\r\n        // console.log(this.props.match.params.ra_reference)\r\n        if(this.props.match.params.ra_reference!==undefined){\r\n            this.setState({activeRowIndex:indx,activeInitial:this.state.dynamic[indx]})\r\n        }\r\n        else{\r\n            if(this.state.dynamic[indx]!==undefined){\r\n            this.setState({activeRowIndex:indx,activeInitial:this.state.dynamic[indx]})\r\n                \r\n            }\r\n            else{\r\n                let activeObj={SERVICE_CITY:null,TAX_CALCULATION:null,FOREIGN_CURRENCY:null,COMPONENTS_WISE_MARKUP:null,\r\n                    COMPONENTS_WISE_DISCOUNT_COMISSION:null,COMPONENTS_WISE_NET_COST_CURRENCY:null,COMPONENTS_WISE_NET_COST:null,RA_FILE_HANDLER:null,PAYMENT_SLABS:null,\r\n                SUPPLIER_PAYMENT_DEADLINE:null,COMPONENTS_WISE_CURRENCY:null,ARRIVALDATE:null};\r\n                this.setState({activeRowIndex:indx,activeInitial:activeObj})\r\n                console.log(activeObj)\r\n            }\r\n\r\n        }\r\n        this.setState({modalVisible:true})\r\n    }\r\n    componentWillMount(){\r\n        // this.getSupplier()\r\n        this.getCountries()\r\n        this.getCurrency()\r\n        document.title=\"BOOKING FORM | REAL BOOKS\"\r\n        // edit mode setup\r\n        if(this.props.match.params.ra_reference!==undefined){\r\n            this.getActiveBooking(this.props.match.params.ra_reference)\r\n        }\r\n         // dynamic form_setup\r\n        let {dynamic,dynamic_formData}=this.state;\r\n        dynamic.push(Object.assign({},dynamic_formData));\r\n        \r\n        this.setState({dynamic});\r\n    }\r\n\r\n    getActiveBooking(id){\r\n        \r\n        HttpService.get('bookingmaster/local/'+id).then(res=>{\r\n            if(res.data.success){\r\n               \r\n                this.setState({isEdit:true,formData:res.data.data,dynamic:res.data.data.dynamic,RA_REFERENCE:res.data.RA_REFERENCE,totalCost:res.data.data.SELLINGCOST,totalDiscount:res.data.data.OVER_ALL_DISCOUNT,totalTax:res.data.data.TOTAL_TAX_CALCULATION,\r\n                activeInitial: res.data.data.dynamic[ res.data.data.dynamic.length-1]\r\n                })\r\n            }\r\n            \r\n            // console.log(this.state)\r\n        })\r\n    }\r\n\r\n    //  getSupplier(){\r\n        \r\n    //     HttpService.get('api/supplier/getall').then(res=>{\r\n    //         if(res.status===200){\r\n    //             let data=[]\r\n    //             res.data.supplier.map((item,indx)=>{\r\n    //                 // if(indx<20){\r\n    //                     data.push(item.supplier_display_name+\" , \"+item.supplier_id)\r\n\r\n    //                 // }\r\n    //             })\r\n    //             this.setState({suppliers:data})\r\n    //         }\r\n    //     })\r\n    // }\r\n\r\n    getCountries(){\r\n        \r\n        HttpService.get('api/service/country/getall').then(res=>{\r\n            if(res.status===200){\r\n                this.setState({countries:res.data.suppliercountry})\r\n            }\r\n        })\r\n    }\r\n\r\n    getCurrency(){\r\n        \r\n        HttpService.get('api/currency/getall').then(res=>{\r\n            if(res.status===200){\r\n                this.setState({currencies:res.data.currency})\r\n            }\r\n        })\r\n    }\r\n\r\n    setSupplierName(dynamic,value,indx){\r\n        // value=value.target.value;\r\n        console.log(value.split(\"~\"))\r\n        if(value!==undefined){\r\n            if(value.split(\"~\").length===2){\r\n                dynamic[indx]['PER_SERVICE_WISE_SUPPLIER_NAME']=value.split(\"~\")[0]\r\n               dynamic[indx]['PER_SERVICE_SUPPLIER_CODE']=value.split(\"~\")[1].trim()\r\n            }\r\n            else{\r\n                dynamic[indx]['PER_SERVICE_WISE_SUPPLIER_NAME']=value.split(\"~\")[0]+value.split(\"~\")[value.split(\"~\").length-2]\r\n                dynamic[indx]['PER_SERVICE_SUPPLIER_CODE']=value.split(\"~\")[value.split(\"~\").length].trim()\r\n            }\r\n               \r\n\r\n        }\r\n        else{\r\n            dynamic[indx]['PER_SERVICE_WISE_SUPPLIER_NAME']=undefined;\r\n            dynamic[indx]['PER_SERVICE_SUPPLIER_CODE']=\"\";\r\n        }\r\n\r\n        console.log(dynamic[indx])\r\n       this.setState({dynamic});\r\n    }\r\n\r\n    cloneField(dynamic){\r\n        let {dynamic_formData}=this.state;\r\n        // console.log('cloning>>>>>')\r\n\r\n        dynamic.push(Object.assign({},dynamic_formData,{ismanual:1}))\r\n\r\n        this.setState({dynamic});\r\n    }\r\n\r\n    \r\n    deleteRow(dynamic,indx){\r\n        // console.log(dynamic)\r\n        // console.log('deleting>>>>> '+indx)\r\n\r\n        dynamic.splice(indx,1);\r\n        // console.log('deleted')\r\n        // console.log(dynamic)\r\n        let cost=0;\r\n        dynamic.map(item=>{\r\n            cost=cost+parseFloat(item.COMPONENTS_WISE_SELLING_COST);\r\n        })\r\n\r\n        this.setState({dynamic,totalCost:cost,formData:Object.assign({},this.state.formData,{SELLINGCOST:cost})});\r\n    }\r\n\r\n    setSellingCost(indx,dynamic,formData){\r\n        // dynamic[indx]=Object.assign({},dynamic[indx],activeInitial);\r\n        let cost=0;\r\n        dynamic.map(item=>{\r\n            cost=cost+parseFloat(item.COMPONENTS_WISE_SELLING_COST);\r\n        })\r\n\r\n        this.setState({formData:Object.assign({},formData,{SELLINGCOST:cost}),totalCost:cost});\r\n\r\n    }\r\n\r\n    setTotalDiscount(indx,dynamic,formData,activeInitial){\r\n                dynamic[indx]=Object.assign({},dynamic[indx],activeInitial);\r\n                let discount=0;\r\n                dynamic.map(item=>{\r\n                    discount=discount+parseInt(item.COMPONENTS_WISE_DISCOUNT_COMISSION);\r\n                })\r\n        \r\n                this.setState({formData:Object.assign({},formData,{OVER_ALL_DISCOUNT:discount}),totalDiscount:discount});\r\n        \r\n    }\r\n\r\n    setTotalTax(indx,dynamic,formData,activeInitial){\r\n        dynamic[indx]=Object.assign({},dynamic[indx],activeInitial);\r\n        let tax=0;\r\n        dynamic.map(item=>{\r\n            tax=tax+parseInt(item.TAX_CALCULATION);\r\n        })\r\n\r\n        this.setState({formData:Object.assign({},formData,{TOTAL_TAX_CALCULATION:tax}),totalTax:tax});\r\n\r\n}\r\n\r\n    submitData=(formData,dynamic)=>new Promise(resolve=>{\r\n      \r\n        \r\n        if(this.state.RA_REFERENCE.length===0){\r\n\r\n            notification['warning']({\r\n                message: 'Required field missing',\r\n                description: \"RA Reference can't be empty.\",\r\n              });\r\n            resolve(false);\r\n        }\r\n        else if(formData.RA_AGENT_CODE===undefined || formData.RA_AGENT_CODE.length===0){\r\n            notification['warning']({\r\n                message: 'Required field missing',\r\n                description: \"RA AGENT CODE can't be empty!\",\r\n              });\r\n\r\n            resolve(false);\r\n        }\r\n        else if(formData.STAND_ALONE===null){\r\n            notification['warning']({\r\n                message: 'Required field missing',\r\n                description: \"Please select a STAND ALONE state\",\r\n              });\r\n\r\n            resolve(false);\r\n        }\r\n        else if(dynamic!==undefined && formData.STAND_ALONE===\"NO\"){\r\n            if(dynamic.length===1){\r\n                // if(){\r\n                    notification['warning']({\r\n                        message: 'Multiple field missing',\r\n                        description: \"Please add another row.\",\r\n                      });\r\n        \r\n                    resolve(false);\r\n                    // }\r\n            }\r\n            else{\r\n                resolve(true);\r\n            }\r\n        }\r\n        else if(formData.INVOICE_CURRENCY===undefined || formData.INVOICE_CURRENCY.length===0){\r\n            notification['warning']({\r\n                message: 'Required field missing',\r\n                description: \"Please select an Invoice Currency\",\r\n              });\r\n\r\n            resolve(false);\r\n        }\r\n        else if(formData.INVOICE_DATE===undefined || formData.INVOICE_DATE===null){\r\n            notification['warning']({\r\n                message: 'Required field missing',\r\n                description: \"Please select an Invoice Date\",\r\n              });\r\n\r\n            resolve(false);\r\n        }\r\n        else if(formData.EXCHANGE_RATE===undefined || parseInt(formData.EXCHANGE_RATE)<0){\r\n            console.log(formData.EXCHANGE_RATE)\r\n            notification['warning']({\r\n                message: 'Required field missing',\r\n                description: \"Exchange rate can't be empty\",\r\n              });\r\n\r\n            resolve(false);\r\n        }\r\n        else if(formData.CHECK_IN_DATE===undefined){\r\n            notification['warning']({\r\n                message: 'Required field missing',\r\n                description: \"Please set a check in date\",\r\n              });\r\n            resolve(false);\r\n        } \r\n        else if(formData.CHECK_OUT_DATE===undefined){\r\n            notification['warning']({\r\n                message: 'Required field missing',\r\n                description: \"Please set a check out date\",\r\n              });\r\n            resolve(false);\r\n        } \r\n        \r\n        else if(parseFloat(formData.SELLINGCOST)!==parseFloat(this.state.totalCost.toString())){\r\n            console.log(formData.SELLINGCOST,this.state.totalCost)\r\n            notification['warning']({\r\n                message: 'Required field missing',\r\n                description: \"Invalid selling cost\",\r\n              });\r\n\r\n            resolve(false);\r\n        }\r\n        else if(parseInt(formData.TOTAL_IN_AMOUNTS)<formData.SELLINGCOST){\r\n            notification['warning']({\r\n                message: 'Required field missing',\r\n                description: \"Invalid Total in amount\",\r\n              });\r\n\r\n            resolve(false); \r\n        }\r\n        else if(parseInt(formData.OVER_ALL_DISCOUNT)!==parseInt(this.state.totalDiscount!==null?this.state.totalDiscount.toString():0)){\r\n            notification['warning']({\r\n                message: 'Required field missing',\r\n                description: \"Invalid overall discount\",\r\n              });\r\n              \r\n            resolve(false);\r\n        }\r\n        \r\n        else if(formData.SBU===undefined){\r\n            notification['warning']({\r\n                message: 'Required field missing',\r\n                description: \"SBU can't be empty\",\r\n              });\r\n\r\n            resolve(false);\r\n        }\r\n        else if(parseInt(formData.TOTAL_TAX_CALCULATION)!==parseInt(this.state.totalTax!==null?this.state.totalTax.toString():0)){\r\n            console.log(this.state.totalTax)\r\n            notification['warning']({\r\n                message: 'Required field missing',\r\n                description: \"Invalid tax calculation\",\r\n              });\r\n\r\n            resolve(false);\r\n        }\r\n        else if(parseInt(formData.TOTAL_IN_AMOUNTS)===0 || formData.TOTAL_IN_AMOUNTS===undefined || formData.TOTAL_IN_AMOUNTS===null){\r\n            notification['warning']({\r\n                message: 'Required field missing',\r\n                description: \"Total In Amount can't be empty\",\r\n              });\r\n\r\n            resolve(false);\r\n        }\r\n        else{\r\n            dynamic.map((item,idx)=>{\r\n                // console.log(item)\r\n\r\n                if(item.SERVICE_COUNTRY.length===0){\r\n                    notification['warning']({\r\n                        message: 'Required field missing',\r\n                        description: \"Please select a service country!\",\r\n                      });\r\n        \r\n                    resolve(false);\r\n                }\r\n                else if(item.PER_SERVICE_WISE_SUPPLIER_NAME.length===0){\r\n                    console.log(item.PER_SERVICE_WISE_SUPPLIER_NAME)\r\n                    notification['warning']({\r\n                        message: 'Required field missing',\r\n                        description: \"Please select a Supplier!\",\r\n                      });\r\n        \r\n                    resolve(false);\r\n                }\r\n                else if(item.SERVICE_CATEGORY.length===0){\r\n                    message.warning(\"Please select a service category!\",0.9);\r\n                    resolve(false);\r\n                }\r\n                else if(item.PRODUCT_NAME.length===0){\r\n                    notification['warning']({\r\n                        message: 'Required field missing',\r\n                        description: \"PRODUCT NAME can't be empty\",\r\n                      });\r\n        \r\n        \r\n                    resolve(false);\r\n                }\r\n                else if(item.COMPONENTS_WISE_SELLING_COST.length===0){\r\n                    notification['warning']({\r\n                        message: 'Required field missing',\r\n                        description: \"Component wise selling cost can't be empty\",\r\n                      });\r\n        \r\n                    resolve(false);\r\n                }\r\n                else if(item.COMPONENTS_WISE_NET_COST===undefined){\r\n                    notification['warning']({\r\n                        message: 'Required field missing',\r\n                        description: \"Component wise net cost can't be empty\",\r\n                      });\r\n        \r\n                    resolve(false);\r\n                }\r\n                \r\n                else if(item.COMPONENTS_WISE_NET_COST_CURRENCY===undefined || item.COMPONENTS_WISE_NET_COST_CURRENCY===null ||  item.COMPONENTS_WISE_NET_COST_CURRENCY===0){\r\n                    console.log(\"item\",item.COMPONENTS_WISE_NET_COST_CURRENCY,\"state\",this.state.activeInitial.COMPONENTS_WISE_NET_COST_CURRENCY)\r\n                    notification['warning']({\r\n                        message: 'Required field missing',\r\n                        description: \"Component wise net cost currency can't be empty\",\r\n                      });\r\n                        this.setState({hasErr:true})\r\n\r\n                    resolve(false);\r\n                }\r\n                else{\r\n                    if(!this.state.hasErr && idx===dynamic.length-1){\r\n                      resolve(true);\r\n                    }\r\n                }\r\n\r\n            })\r\n        }\r\n        \r\n    })\r\n\r\n\r\n    SaveData(formData,dynamic){\r\n        this.submitData(formData,dynamic).then(valid=>{\r\n            console.log(valid)\r\n            if(valid===true ){\r\n            \r\n\r\n                formData.dynamic=[...dynamic];\r\n                formData.dynamic.map((item,indx)=>{\r\n                    formData.dynamic[indx]['ismanual']=1;\r\n                })\r\n                formData.RA_REFERENCE=this.state.RA_REFERENCE;\r\n                if(formData.msg!==undefined){\r\n                    delete formData.msg;\r\n                }\r\n                if(formData.success!==undefined){\r\n                    delete formData.success;\r\n                }\r\n    \r\n                formData.RA_AGENT_CODE.trim();\r\n                formData.isEdit=this.state.isEdit;\r\n    \r\n                message.loading(\"Saving data....\",1.5)\r\n                HttpService.post(\"bookingmaster/local/\"+this.state.RA_REFERENCE,{data:formData}).then(res=>{\r\n                    if(res.status===200){\r\n                        if(res.data.success){\r\n                          \r\n                            notification['success']({\r\n                                message: 'Booking form data is submitted',\r\n                                description: \"Data saved succesfully\",\r\n                              });\r\n    \r\n                              var self=this;\r\n                              setTimeout(function(){\r\n                                window.location.href=\"/local/booking/\"+self.state.RA_REFERENCE\r\n    \r\n                              },1000)\r\n                        }\r\n                        else{\r\n                            notification['error']({\r\n                                message: 'BookingMaster Error',\r\n                                description:res.data.msg,\r\n                              });\r\n                        }\r\n                    }\r\n                })\r\n               \r\n            }\r\n        }).catch(err=>{\r\n            console.log(err)\r\n        })\r\n        \r\n        \r\n\r\n      \r\n    }\r\n\r\n    setOutDate(formData,dateString){\r\n        if(formData.CHECK_IN_DATE){\r\n            if(dateString>=formData.CHECK_IN_DATE){\r\n                this.setState({formData:Object.assign({},formData,{CHECK_OUT_DATE:dateString}),hasErr:false})\r\n            }\r\n            else{\r\n                notification['error']({\r\n                    message: 'Invalid Date',\r\n                    description: \"Invalid date selected!\",\r\n                  });\r\n                this.setState({hasErr:true})\r\n            }\r\n            \r\n        }\r\n        else{\r\n            notification['warning']({\r\n                message: 'Required Field missing',\r\n                description: \"Please enter check in date before proceeding\",\r\n              });\r\n              this.setState({hasErr:true})\r\n        }\r\n\r\n    }\r\n\r\n    setInDate(formData,dateString){\r\n        if(formData.CHECK_OUT_DATE){\r\n            if(dateString<=formData.CHECK_OUT_DATE){\r\n                this.setState({formData:Object.assign({},formData,{CHECK_IN_DATE:dateString}),hasErr:false})\r\n            }\r\n            else{\r\n                notification['error']({\r\n                    message: 'Invalid Date',\r\n                    description: \"Invalid date selected!\",\r\n                  });\r\n                this.setState({hasErr:true})\r\n            }\r\n            \r\n        }\r\n        else{\r\n            formData.CHECK_IN_DATE=dateString;\r\n            delete formData.CHECK_OUT_DATE;\r\n           this.setState({formData})\r\n        }\r\n\r\n    }\r\n\r\n    setModalValues(name,value){\r\n        this.setState({activeInitial:Object.assign({},this.state.activeInitial,{[name]:value})});\r\n    }\r\n\r\n\r\n    saveRow(activeRowData){\r\n        let {dynamic}=this.state;\r\n\r\n        dynamic[this.state.activeRowIndex]=Object.assign({},dynamic[this.state.activeRowIndex],activeRowData);\r\n        console.log( dynamic)\r\n        this.setState({dynamic,activeInitial:{},activeRowIndex:-1,modalVisible:false});\r\n    }\r\n\r\n    clearList(){\r\n        let {dynamic,formData}=this.state;\r\n        console.log(formData.STAND_ALONE)\r\n        if(formData.STAND_ALONE===\"YES\"){\r\n            if(dynamic.length>1){\r\n                dynamic.map((item,indx)=>{\r\n                    if(indx===0){\r\n                        dynamic.pop();\r\n                    }\r\n                    \r\n                })\r\n            }\r\n        }\r\n        \r\n    }\r\n\r\n    searchSupplier(value,indx,dynamic){\r\n        // console.log(value)\r\n        if(value.length>=3){\r\n            HttpService.get(\"api/supplier/search?search=\"+value).then(res=>{\r\n                if(res.status===200){\r\n                    let data=[]\r\n                res.data.supplier.map((item,indx)=>{\r\n                    // if(indx<20){\r\n                        data.push(item.supplier_display_name+\"~\"+item.supplier_id)\r\n\r\n                    // }\r\n                })\r\n                if(value!==undefined){\r\n                    dynamic[indx]['PER_SERVICE_WISE_SUPPLIER_NAME']=value.split(\"~\")[0]\r\n                    dynamic[indx]['PER_SERVICE_SUPPLIER_CODE']=value.split(\"~\")[1]\r\n     \r\n             }\r\n             else{\r\n                 dynamic[indx]['PER_SERVICE_WISE_SUPPLIER_NAME']=undefined;\r\n                 dynamic[indx]['PER_SERVICE_SUPPLIER_CODE']=\"\";\r\n             }\r\n                this.setState({suppliers:data,dynamic})\r\n                }\r\n            })\r\n        }\r\n        else{\r\n            dynamic[indx]['PER_SERVICE_WISE_SUPPLIER_NAME']=undefined;\r\n            dynamic[indx]['PER_SERVICE_SUPPLIER_CODE']=\"\";\r\n            this.setState({dynamic})\r\n\r\n        }\r\n    }\r\n\r\n  render() {\r\n      const {formData,dynamic,activeInitial}=this.state;\r\n    console.log(activeInitial)\r\n    return [\r\n        <header>\r\n        <div className=\"container-fluid\">\r\n            <div className=\"col-auto m-auto\">\r\n                <h3>Booking Entry</h3>\r\n            </div>\r\n        </div>\r\n    </header>,\r\n    <main>\r\n        <div className=\"container-fluid\">\r\n            <div className=\"row\">\r\n                <div className=\"col-4\">\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"\">RA Reference *</label>\r\n                        <input readOnly={this.state.isEdit} disabled={this.state.isEdit} type=\"text\" className=\"form-control\" defaultValue={this.state.RA_REFERENCE} onChange={(e)=>this.setState({RA_REFERENCE:e.target.value})} id=\"\" placeholder=\"\" />\r\n                    </div>\r\n                </div>\r\n                <div className=\"col-4\">\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"\">RA Agent Code *</label><br/>\r\n                        {   formData.RA_AGENT_CODE!==null?\r\n                        <AutoComplete\r\n                        style={{ width: 380,left:'-0.5em' }}\r\n                        dataSource={this.state.agents}\r\n                        value={this.state.formData.RA_AGENT_CODE}\r\n                        onSelect={(value)=>{this.setState({formData:Object.assign({},formData,{RA_AGENT_CODE:value.split(\",\")[1].trim()})})}}\r\n                        onChange={(value)=>this.getAgentCode(formData,value)}\r\n                        className=\"form-control\"\r\n                        filterOption={(inputValue, option) => option.props.children.split(\",\")[0].toUpperCase().indexOf(inputValue.toUpperCase()) !== -1 || option.props.children.split(\",\")[1].toUpperCase().indexOf(inputValue.toUpperCase()) !== -1}\r\n                        />:\r\n                        <AutoComplete\r\n                        style={{ width: 380,left:'-0.5em' }}\r\n                        dataSource={this.state.agents}\r\n                        defaultValue={this.state.formData.RA_AGENT_CODE}\r\n                        onSelect={(value)=>{this.setState({formData:Object.assign({},formData,{RA_AGENT_CODE:value.split(\",\")[1].trim()})})}}\r\n                        onChange={(value)=>this.getAgentCode(formData,value)}\r\n                        className=\"form-control\"\r\n                        filterOption={(inputValue, option) => option.props.children.split(\",\")[0].toUpperCase().indexOf(inputValue.toUpperCase()) !== -1 || option.props.children.split(\",\")[1].toUpperCase().indexOf(inputValue.toUpperCase()) !== -1}\r\n                        />\r\n                        \r\n                        }\r\n                        {/* <input type=\"text\" className=\"form-control\" defaultValue={formData.RA_AGENT_CODE} onChange={(e)=>{formData.RA_AGENT_CODE=e.target.value;this.getAgentCode(e.target.value)}} id=\"\" placeholder=\"\" /> */}\r\n                    </div>\r\n                </div>\r\n                <div className=\"col-4\">\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"\">Invoice Number</label>\r\n                        <input type=\"text\" className=\"form-control\" defaultValue={formData.INVOICE_NUMBER} onChange={(e)=>{formData.INVOICE_NUMBER=e.target.value;}} id=\"\" placeholder=\"\" />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"row\">\r\n                <div className=\"col-4\">\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"\">First Name</label>\r\n                        <input type=\"text\" className=\"form-control\" defaultValue={formData.FIRSTNAME} onChange={(e)=>{formData.FIRSTNAME=e.target.value;}} id=\"\" placeholder=\"\" />\r\n                    </div>\r\n                </div>\r\n                <div className=\"col-4\">\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"\">Invoice Currency *</label>\r\n                        <div className=\"input-group mb-3\">\r\n                        <select className=\"form-control ng-pristine ng-valid ng-touched\" onChange={(e)=>{formData.INVOICE_CURRENCY=e.target.value;}} defaultValue=\"\">\r\n                                <option value=\"\">{this.props.match.params.ra_reference?formData.INVOICE_CURRENCY:\"Select Currency...\"}</option>\r\n                                {\r\n                                    this.state.currencies!==undefined?\r\n                                    this.state.currencies.map(currency=>{\r\n                                        return <option value={currency}>{currency}</option>\r\n                                    }):null\r\n                                }\r\n\r\n                            </select>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"col-4\">\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"\">Invoice Date *</label>\r\n                        <div className=\"input-group mb-3\">\r\n                            <DatePicker style={{width:'30em'}} value={formData.INVOICE_DATE?moment(formData.INVOICE_DATE, 'YYYY-MM-DD'):\"\"} format=\"YYYY-MM-DD\" onChange={(date,dateString)=>{this.setState({formData:Object.assign({},formData,{INVOICE_DATE:dateString})})}} placeholder=\"yyyy-mm-dd\" />\r\n                            {/* <div className=\"input-group-append\">\r\n                                <span className=\"input-group-text\" id=\"basic-addon2\"><i className=\"ion ion-md-calendar\"></i></span>\r\n                            </div> */}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"row\">\r\n                <div className=\"col-4\">\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"\">Exchange Rate *</label>\r\n                        <input type=\"number\" className=\"form-control\" min=\"0\" defaultValue={formData.EXCHANGE_RATE} onChange={(e)=>{formData.EXCHANGE_RATE=e.target.value}} id=\"\" placeholder=\"\" />\r\n                    </div>\r\n                </div>\r\n                <div className=\"col-4\">\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"\">Payment Deadline</label>\r\n                        <div className=\"input-group mb-3\">\r\n                            <DatePicker style={{width:'30em'}} value={formData.PAYMENT_DEADLINE?moment(formData.PAYMENT_DEADLINE, 'YYYY-MM-DD'):\"\"}  onChange={(date,dateString)=>{this.setState({formData:Object.assign({},formData,{PAYMENT_DEADLINE:dateString})})}} />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"col-4\">\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"\">Stand Alone *</label>\r\n                        <select className=\"form-control\" value={formData.STAND_ALONE} onChange={(e)=>{formData.STAND_ALONE=e.target.value;this.setState({formData});this.clearList()}} >\r\n                            <option value=\"\">Choose one</option>\r\n                            {[{val:'YES',name:'YES'},{val:'NO',name:'NO'}].map(itm=>{\r\n                                return <option value={itm.val}>{itm.name}</option>\r\n                            })}\r\n                        </select>\r\n                       \r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"row mb-5\">\r\n                <div className=\"col-4\">\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"\">SBU *</label>\r\n                        <select  className=\"form-control\" value={formData.SBU} onChange={(e)=>{formData.SBU=e.target.value;this.setState({formData})}}>\r\n                            <option value=\"\">Choose one</option>\r\n                            {['FIT','GROUP'].map(itm=>{\r\n                                return <option val={itm}>{itm}</option>\r\n                            })}\r\n                        </select>\r\n\r\n                    </div>\r\n                </div>\r\n                <div className=\"col-4\">\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"\">Lead Passanger</label>\r\n                        <input type=\"text\" className=\"form-control\" defaultValue={formData.LEAD_PASSENGER} onChange={(e)=>{formData.LEAD_PASSENGER=e.target.value}} id=\"\" placeholder=\"\" />\r\n                    </div>\r\n                </div>\r\n                <div className=\"col-4\">\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"\">Checkin Date *</label>\r\n                        <div className=\"input-group mb-3\">\r\n                            <DatePicker style={{width:'30em'}} value={formData.CHECK_IN_DATE?moment(formData.CHECK_IN_DATE, 'YYYY-MM-DD'):\"\"} format=\"YYYY-MM-DD\" onChange={(date,dateString)=>{this.setInDate(formData,dateString)}} placeholder=\"yyyy-mm-dd\" />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"col-4\">\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"\">Checkout Date *</label>\r\n                        <div className=\"input-group mb-3\">\r\n                            <DatePicker style={{width:'30em'}} value={formData.CHECK_OUT_DATE?moment(formData.CHECK_OUT_DATE, 'YYYY-MM-DD'):\"\"} format=\"YYYY-MM-DD\" onChange={(date,dateString)=>{this.setOutDate(formData,dateString)}} placeholder=\"yyyy-mm-dd\" />\r\n                           \r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n            {dynamic.map((item,indx)=>{\r\n               return <div className=\"row align-items-end\"  key={indx}>\r\n                <div className=\"col-2\">\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"\">Service Category *</label>\r\n                            <select className=\"form-control ng-pristine ng-valid ng-touched\" \r\n                            value={item.SERVICE_CATEGORY}\r\n                            onChange={(e)=>{dynamic[indx]['SERVICE_CATEGORY']=e.target.value;this.setState({dynamic})}}>\r\n                                <option value=\"\">{this.props.match.params.ra_reference?item.SERVICE_CATEGORY:\"Select a category\"}</option>\r\n                                <option value=\"Tour\">Tour</option>\r\n                                <option value=\"Hotel\">Hotel</option>\r\n                            </select>\r\n                          \r\n                       \r\n                      \r\n                    </div>\r\n                </div>\r\n                <div className=\"col-2\">\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"\">Product Name *</label>\r\n                        <input type=\"text\" className=\"form-control mb-4\" id=\"\" value={item.PRODUCT_NAME} onChange={(e)=>{dynamic[indx]['PRODUCT_NAME']=e.target.value;this.setState({dynamic})}} placeholder=\"\" />\r\n                       \r\n                        \r\n                    </div>\r\n                </div>\r\n                <div className=\"col-2\">\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"\" >Per Service Supplier Name *</label>\r\n                        {   item.PER_SERVICE_WISE_SUPPLIER_NAME!==undefined?\r\n                            item.PER_SERVICE_WISE_SUPPLIER_NAME.length>0?\r\n                        <AutoComplete\r\n                        style={{ width: 200,left:'-0.5em' }}\r\n                        dataSource={this.state.suppliers}\r\n                        value={item.PER_SERVICE_WISE_SUPPLIER_NAME}\r\n                        onSelect={(value)=>{this.setSupplierName(dynamic,value,indx)}}\r\n                                                onChange={(value)=>this.searchSupplier(value,indx,dynamic)}\r\n\r\n                        filterOption={(inputValue, option) => option.props.children.split(\"~\")[0].toUpperCase().indexOf(inputValue.toUpperCase()) !== -1 || option.props.children.split(\"~\")[1].toUpperCase().indexOf(inputValue.toUpperCase()) !== -1}\r\n                        />:\r\n                        <AutoComplete\r\n                        style={{ width: 200,left:'-0.5em' }}\r\n                        dataSource={this.state.suppliers}\r\n                        defaultValue={item.PER_SERVICE_WISE_SUPPLIER_NAME}\r\n                        onSelect={(value)=>{this.setSupplierName(dynamic,value,indx)}}\r\n \r\n                        onChange={(value)=>this.searchSupplier(value,indx,dynamic)}\r\n                        />:\r\n                        <AutoComplete\r\n                        style={{ width: 200,left:'-0.5em' }}\r\n                        dataSource={this.state.suppliers}\r\n                        defaultValue={item.PER_SERVICE_WISE_SUPPLIER_NAME}\r\n                        onSelect={(value)=>{this.setSupplierName(dynamic,value,indx)}}\r\n                        onChange={(value)=>this.searchSupplier(value,indx,dynamic)}\r\n                       \r\n                        />\r\n                        }\r\n                                            </div>\r\n                </div>\r\n                <div className=\"col-2\">\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"\">Components Wise Cost(Invoice currency) *</label>\r\n                        \r\n                        <input type=\"number\" className=\"form-control mb-4\" value={item.COMPONENTS_WISE_SELLING_COST} onChange={(e)=>{dynamic[indx]['COMPONENTS_WISE_SELLING_COST']=e.target.value;this.setSellingCost(indx,dynamic,formData)}} id=\"\" placeholder=\"\" />\r\n                        \r\n                    </div>\r\n                </div>\r\n                <div className=\"col-3\">\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"\">Service Country *</label>\r\n                        \r\n                        {<div className=\"input-group mb-3\">\r\n                            <select className=\"form-control ng-pristine ng-valid ng-touched\" onChange={(e)=>{dynamic[indx].SERVICE_COUNTRY=e.target.value;this.setState({dynamic})}} value={item.SERVICE_COUNTRY}>\r\n                                <option value=\"\">{this.props.match.params.ra_reference?item.SERVICE_COUNTRY:\"Select Country...\"}</option>\r\n                                {this.state.countries!==undefined?this.state.countries.map((contryName)=>{\r\n                                    return <option value={contryName}>{contryName}</option>\r\n                                }):null}\r\n                            </select>\r\n                            </div>}\r\n                        \r\n                        \r\n                    </div>\r\n                </div>\r\n                {indx===dynamic.length-1?<div className=\"col-auto align-self-center mt-4\" >\r\n                    <div className=\"form-action-group d-flex align-items-center justify-content-between mb-3\">\r\n                        <button style={{display:'block'}} type=\"button\" className=\"btn btn-light mr-2\" onClick={()=>{this.openModal(indx)}} data-toggle=\"modal\" data-target=\"#exampleModalCenter\"><i\r\n                                className=\"ion ion-ios-more text-dark\"></i></button>\r\n                        <button type=\"button\" style={formData.STAND_ALONE===\"YES\"?{display:'none'}:null} className=\"btn btn-light mr-2\" onClick={()=>{ this.setState({activeInitial:{}});this.cloneField(dynamic)}}><i\r\n                                className=\"ion ion-md-add text-primary\"></i></button>\r\n                        {indx>0?<button type=\"button\" className=\"btn btn-light\" onClick={()=>{this.deleteRow(dynamic,indx)}}><i\r\n                                className=\"ion ion-ios-trash text-danger\"></i></button>:null}\r\n                    </div>\r\n                    \r\n                    \r\n                </div>:<div className=\"col-auto align-self-center mt-5\" >\r\n                    <div className=\"form-action-group d-flex align-items-center justify-content-between mb-4\">\r\n                        <button type=\"button\" className=\"btn btn-light mr-2\" data-toggle=\"modal\" onClick={()=>{this.openModal(indx)}} data-target=\"#exampleModalCenter\"><i\r\n                                className=\"ion ion-ios-more text-dark\"></i></button>\r\n                        <button type=\"button\" className=\"btn btn-light\" onClick={()=>{this.deleteRow(dynamic,indx)}}><i\r\n                                className=\"ion ion-ios-trash text-danger\"></i></button>\r\n                    </div>\r\n                </div>\r\n                         }\r\n                \r\n            </div>\r\n            })}\r\n            \r\n            <div className=\"row\">\r\n                <div className=\"col-10\">\r\n                <div className=\"form-group row\">\r\n                        <label htmlFor=\"\" className=\"ml-auto col-auto col-form-label\">Selling Cost</label>\r\n                        <div className=\"col-2\">\r\n                            <input type=\"number\" min=\"0\" defaultValue={formData.SELLINGCOST} onChange={(e)=>{formData.SELLINGCOST=e.target.value;formData.OVER_ALL_PROFIT=formData.TOTAL_IN_AMOUNTS-formData.SELLINGCOST;this.setState({formData})}} className=\"form-control\" />\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"form-group row\">\r\n                        <label htmlFor=\"\" className=\"ml-auto col-auto col-form-label\">Total In Amounts</label>\r\n                        <div className=\"col-2\">\r\n                            <input type=\"number\" defaultValue={formData.TOTAL_IN_AMOUNTS} onChange={(e)=>{formData.TOTAL_IN_AMOUNTS=e.target.value;formData.OVER_ALL_PROFIT=formData.TOTAL_IN_AMOUNTS-formData.SELLINGCOST;this.setState({formData})}}  className=\"form-control\" />\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"form-group row\">\r\n                        <label htmlFor=\"\" className=\"ml-auto col-auto col-form-label\">Over All Discounts</label>\r\n                        <div className=\"col-2\">\r\n                            <input type=\"number\" min=\"0\" defaultValue={formData.OVER_ALL_DISCOUNT} onChange={(e)=>{formData.OVER_ALL_DISCOUNT=e.target.value;}} className=\"form-control\" />\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"form-group row\">\r\n                        <label htmlFor=\"\" className=\"ml-auto col-auto col-form-label\">Total Tax Calculation</label>\r\n                        <div className=\"col-2\">\r\n                            <input type=\"number\" defaultValue={formData.TOTAL_TAX_CALCULATION} onChange={(e)=>{formData.TOTAL_TAX_CALCULATION=e.target.value;}} className=\"form-control\" />\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"form-group row\">\r\n                        <label htmlFor=\"\" className=\"ml-auto col-auto col-form-label\">Over All Profit</label>\r\n                        <div className=\"col-2\">\r\n                            <input type=\"number\" min=\"0\"  value={parseInt(formData.OVER_ALL_LOSS)===0 || formData.OVER_ALL_LOSS===null?formData.OVER_ALL_PROFIT:console.log('yeah')} onChange={(e)=>{this.setState({formData:Object.assign({},formData,{OVER_ALL_PROFIT:e.target.value})})}}  className=\"form-control\" />\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"form-group row\">\r\n                        <label htmlFor=\"\" className=\"ml-auto col-auto col-form-label\" >Over All Loss</label>\r\n                        <div className=\"col-2\">\r\n                            <input type=\"number\" min=\"0\" defaultValue={formData.OVER_ALL_PROFIT===0?formData.OVER_ALL_LOSS:0} onChange={(e)=>{formData.OVER_ALL_LOSS=e.target.value;}} className=\"form-control\"  />\r\n                        </div>\r\n                    </div>\r\n                    \r\n                    \r\n                </div>\r\n            </div>\r\n            <div style={{width: '100%', height: '150px'}}></div>\r\n            <div className=\"row align-items-end\">\r\n                <div className=\"col-6\">\r\n                    <div className=\"form-group mb-0\">\r\n                        <label htmlFor=\"exampleFormControlTextarea1\">Booking Note</label>\r\n                        <textarea className=\"form-control\" value={formData.BOOKING_NOTES} onChange={(e)=>{formData.BOOKING_NOTES=e.target.value}} id=\"exampleFormControlTextarea1\" rows=\"5\"\r\n                            style={{resize: 'none'}}></textarea>\r\n                    </div>\r\n                </div>\r\n                \r\n                <div className=\"col-1 text-right\">\r\n                    <button type=\"submit\" className=\"btn btn-primary w-100\"  onClick={()=>{this.SaveData(formData,dynamic)}}>Save</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n        {/* <!-- Modal --> */}\r\n  \r\n            <Modal\r\n             visible={this.state.modalVisible} \r\n             width={900} footer={[]}\r\n              onCancel={()=>this.setState({modalVisible:false,activeRowIndex:-1,activeInitial:{}})}\r\n              >\r\n            <div className=\"modal-dialog modal-lg modal-dialog-centered\" role=\"document\">\r\n                <div className=\"modal-content\">\r\n                    \r\n                    <div className=\"modal-body\">\r\n\r\n                            <div className=\"tab-pane fade show active\" id=\"supplier\" role=\"tabpanel\" aria-labelledby=\"supplier-tab\">\r\n                                <div className=\"container-fluid\">\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-6\">\r\n                                            <div className=\"form-group\">\r\n                                                <label htmlFor=\"\">Service City</label>\r\n                                                <Input type=\"text\" value={this.state.activeInitial.SERVICE_CITY} onChange={(e)=>{this.setModalValues('SERVICE_CITY',e.target.value);}} className=\"form-control\" placeholder=\"\" />\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"col-6\">\r\n                                            <div className=\"form-group\">\r\n                                                <label htmlFor=\"\">Tax Calculation</label>\r\n                                                <Input type=\"number\" value={activeInitial.TAX_CALCULATION} onChange={(e)=>{activeInitial.TAX_CALCULATION=e.target.value;this.setTotalTax(this.state.activeRowIndex,dynamic,formData,activeInitial)}} className=\"form-control\" placeholder=\"\" />\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    \r\n                                    <div className=\"row\">\r\n                                        {/* <div className=\"col-6\">\r\n                                            <div className=\"form-group\">\r\n                                                <label htmlFor=\"\">Foreign Currency</label>\r\n                                                <Select className=\"form-control ng-pristine ng-valid ng-touched\" \r\n                                                    value={activeInitial.FOREIGN_CURRENCY} onChange={(e)=>{this.setState({activeInitial:Object.assign({},activeInitial,{FOREIGN_CURRENCY:e})})}}\r\n                                                >\r\n                                                   \r\n                                                    {\r\n                                                        this.state.currencies.map(item=>{\r\n                                                            return <Option value={item}>{item}</Option>\r\n                                                        })\r\n                                                    }\r\n\r\n                                                </Select>\r\n                                            </div>\r\n                                        </div> */}\r\n                                        <div className=\"col-6\">\r\n                                            <div className=\"form-group\">\r\n                                                <label htmlFor=\"\">City</label>\r\n                                                <Input type=\"text\" className=\"form-control\"\r\n                                                    value={activeInitial.SERVICE_CITY} onChange={(e)=>{activeInitial.SERVICE_CITY=e.target.value}}\r\n                                                 id=\"\" placeholder=\"\" />\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"col-6\">\r\n                                            <div className=\"form-group\">\r\n                                                <label htmlFor=\"\">Components Wise Markup</label>\r\n                                                <Input type=\"number\" min=\"0\" className=\"form-control\" value={activeInitial.COMPONENTS_WISE_MARKUP} onChange={(e)=>{this.setState({activeInitial:Object.assign({},activeInitial,{COMPONENTS_WISE_MARKUP:e.target.value})})}} id=\"\" placeholder=\"\" />\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-6\">\r\n                                            <div className=\"form-group\">\r\n                                                <label htmlFor=\"\">Component Wise Net Cost *</label>\r\n                                                <Input type=\"number\" value={activeInitial.COMPONENTS_WISE_NET_COST} onChange={(e)=>{activeInitial.COMPONENTS_WISE_NET_COST=e.target.value;this.setState({activeInitial:Object.assign({},this.state.activeInitial,activeInitial)})}} className=\"form-control\" id=\"\" placeholder=\"\" />\r\n                                            </div>\r\n                                        </div>\r\n                                        <div classsName=\"col-6\">\r\n                                            <div className=\"form-group\">\r\n                                                <label htmlFor=\"\">Components Wise Net Cost Currency *</label>\r\n                                                <Select \r\n                                                className=\"form-control ng-pristine ng-valid ng-touched\"\r\n                                                value={activeInitial.COMPONENTS_WISE_NET_COST_CURRENCY} onChange={(e)=>{activeInitial.COMPONENTS_WISE_NET_COST_CURRENCY=e;activeInitial.COMPONENTS_WISE_CURRENCY=e;this.setState({activeInitial:Object.assign({},this.state.activeInitial,activeInitial),hasErr:false})}}\r\n                                                >   \r\n                                                    {\r\n                                                        this.state.currencies.map(item=>{\r\n                                                            return <Option value={item}>{item}</Option>\r\n                                                        })\r\n                                                    }\r\n\r\n                                                </Select>\r\n                                                \r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    \r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-6\">\r\n                                            <div className=\"form-group mb-0\">\r\n                                                <label htmlFor=\"\">Booking Reference(RA File Handler)</label>\r\n                                                <Input type=\"text\" value={activeInitial.RA_FILE_HANDLER} onChange={(e)=>{activeInitial.RA_FILE_HANDLER=e.target.value;this.setState({activeInitial})}} className=\"form-control\" id=\"\" placeholder=\"\" />\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"col-6\">\r\n                                            <div className=\"form-group mb-0\">\r\n                                                <label htmlFor=\"\">Payment Slabs</label>\r\n                                                <Input type=\"text\" value={activeInitial.PAYMENT_SLABS} onChange={(e)=>{activeInitial.PAYMENT_SLABS=e.target.value}} className=\"form-control\" id=\"\" placeholder=\"\"/>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-6\">\r\n                                            <div className=\"form-group mb-0\">\r\n                                                <label htmlFor=\"\">Supplier Payment Deadline</label>\r\n                                                <div className=\"input-group-mb6\">\r\n                                                <DatePicker format=\"YYYY-MM-DD\" \r\n                                                        value={activeInitial.SUPPLIER_PAYMENT_DEADLINE?moment(activeInitial.SUPPLIER_PAYMENT_DEADLINE):null} \r\n                                                        onChange={(date,dateString)=>{activeInitial.SUPPLIER_PAYMENT_DEADLINE=dateString;this.setState({activeInitial:Object.assign({},activeInitial,{SUPPLIER_PAYMENT_DEADLINE:dateString})})}}\r\n                                                    style={{width:\"25.5em\"}}\r\n                                                />\r\n\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"col-6\">\r\n                                            <div className=\"form-group mb-0\">\r\n                                                <label htmlFor=\"\">Component Wise Discount Comission</label>\r\n                                                <Input type=\"number\" value={activeInitial.COMPONENTS_WISE_DISCOUNT_COMISSION} onChange={(e)=>{activeInitial.COMPONENTS_WISE_DISCOUNT_COMISSION=e.target.value;this.setTotalDiscount(this.state.activeRowIndex,dynamic,formData,activeInitial)}} className=\"form-control\" id=\"\" placeholder=\"\"/>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"row\">\r\n                                        {/* <div className=\"col-6\">\r\n                                            <div className=\"form-group\">\r\n                                                <label htmlFor=\"\">Component Wise Currency</label>\r\n                                                <Select \r\n                                                className=\"form-control ng-pristine ng-valid ng-touched\"\r\n                                                value={activeInitial.COMPONENTS_WISE_CURRENCY} onChange={(e)=>{dynamic[this.state.activeRowIndex].COMPONENTS_WISE_CURRENCY=e;this.setState({activeInitial:Object.assign({},activeInitial,{COMPONENTS_WISE_CURRENCY:e})})}}\r\n                                                >\r\n                                                    {\r\n                                                        this.state.currencies.map(item=>{\r\n                                                            return <Option value={item}>{item}</Option>\r\n                                                        })\r\n                                                    }\r\n\r\n                                                </Select>\r\n                                            </div>\r\n                                        </div> */}\r\n                                        <div className=\"col-6\">\r\n                                            <div className=\"form-group mb-0\">\r\n                                                <label htmlFor=\"\">Arrival Date</label>\r\n                                                <div className=\"input-group-mb6\">\r\n                                                <DatePicker format=\"YYYY-MM-DD\" \r\n                                                        value={activeInitial.ARRIVALDATE?moment(activeInitial.ARRIVALDATE, 'YYYY-MM-DD'):\"\"} \r\n                                                        onChange={(date,dateString)=>{activeInitial.ARRIVALDATE=dateString;this.setState({activeInitial:Object.assign({},activeInitial,{ARRIVALDATE:dateString})})}}\r\n                                                    style={{width:\"25.5em\"}}\r\n                                                />\r\n\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        \r\n                                    </div>\r\n                                    <div className=\"row\">\r\n                                        {/* <div className=\"col-6\">\r\n                                            <div className=\"form-group mb-0\">\r\n                                                <label htmlFor=\"\">Arrival Date</label>\r\n                                                <div className=\"input-group-mb6\">\r\n                                                <DatePicker format=\"YYYY-MM-DD\" \r\n                                                        value={activeInitial.ARRIVALDATE?moment(activeInitial.ARRIVALDATE, 'YYYY-MM-DD'):\"\"} \r\n                                                        onChange={(date,dateString)=>{activeInitial.ARRIVALDATE=dateString;this.setState({activeInitial:Object.assign({},activeInitial,{ARRIVALDATE:dateString})})}}\r\n                                                    style={{width:\"25.5em\"}}\r\n                                                />\r\n\r\n                                                </div>\r\n                                            </div>\r\n                                        </div> */}\r\n                                        \r\n                                    </div>\r\n                                </div>\r\n                            {/* </div> */}\r\n                           \r\n                        </div>\r\n                    </div>\r\n                    <div className=\"modal-footer\">\r\n                        <button type=\"button\" className=\"btn btn-primary\" onClick={()=>{this.saveRow(activeInitial)}}>Save</button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            </Modal>\r\n\r\n        </main>\r\n    ]\r\n  }\r\n}\r\n\r\n\r\n\r\nexport default withRouter(Form);\r\n","import React, { Component } from 'react'\r\nimport {withRouter} from 'react-router-dom';\r\nimport 'antd/dist/antd.css';\r\nimport './form.css'\r\nimport { Card,Select, Row, Col, Button, notification } from 'antd';\r\n\r\nimport HttpService from '../services/HttpService';\r\nconst Option = Select.Option;\r\n\r\nclass InvoiceRuleform extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state={\r\n            dynamicId:\"\",\r\n            countryList:[],\r\n            partList:[],\r\n            sbuList:[],\r\n            defaultValues:{\r\n              company_id:'',\r\n              party_id : '',\r\n              party_name:'',\r\n              sbu_id : '',\r\n              invoice_date :''\r\n            },\r\n            mode : '',\r\n        }\r\n    }\r\n\r\n\r\n    componentWillMount(){\r\n        if(this.props.match.params.id){\r\n            this.setState({\r\n              dynamicId:this.props.match.params.id,\r\n              mode : 'edit'\r\n            });\r\n       }\r\n       else{\r\n        this.setState({\r\n          mode : 'new'\r\n        });\r\n       }\r\n    }\r\n\r\n    getCompanyName =()=>{\r\n      return new Promise((resolve,reject)=>{\r\n        HttpService.get(`api/service/countrywithid/getall`).then((data)=>{\r\n          this.setState((state,props)=>{\r\n            return({\r\n              countryList : data.data.suppliercountry\r\n            })\r\n          })\r\n          resolve();\r\n        })\r\n        .catch((error)=>{\r\n          notification['warning']({\r\n            message: 'Error',\r\n            description: \"Unable to fetch Country list\",\r\n          });\r\n          resolve();\r\n        })\r\n      })\r\n    }\r\n\r\n    getSbu =()=>{\r\n      return new Promise((resolve,reject)=>{ \r\n        HttpService.get(`api/sbu/getall`).then((data)=>{\r\n          this.setState((state,props)=>{\r\n            return({\r\n              sbuList : data.data.sbu\r\n            })\r\n          })\r\n          resolve();\r\n        })\r\n        .catch((error)=>{\r\n          notification['warning']({\r\n            message: 'Error',\r\n            description: \"Unable to fetch Sbu list\",\r\n          });\r\n          resolve();\r\n        })\r\n      })\r\n    }\r\n\r\n\r\n\r\n    handleSearchParty = (value)=>{\r\n      if(value.length>=3){\r\n        HttpService.get(`api/supplier/search?search=${value}`).then((data)=>{\r\n          this.setState((state,props)=>{\r\n            return({\r\n              partList : data.data.supplier\r\n            })\r\n          })\r\n        })\r\n        .catch((error)=>{\r\n          notification['warning']({\r\n            message: 'Error',\r\n            description: \"Unable to fetch Supplier list\",\r\n          });\r\n          return;\r\n        })\r\n      }\r\n      else{\r\n        return;\r\n      }\r\n    }\r\n\r\n\r\n    mapParty=(id)=>{\r\n      for(var i=0;i<this.state.partList.length;i++){\r\n        if(this.state.partList[i].supplier_id==id){\r\n          return this.state.partList[i].supplier_display_name;\r\n        }\r\n      }\r\n    }\r\n\r\n    handleChangeParty = (value)=>{\r\n      var nm = this.mapParty(value);\r\n      this.setState((state,props)=>{\r\n        return({\r\n          ...state,\r\n          defaultValues:{\r\n            ...state.defaultValues,\r\n            party_id : value,\r\n            party_name:nm\r\n          }\r\n        });\r\n      })   \r\n      console.log(this.state);   \r\n    }\r\n\r\n    handleCompanyChange = (value)=>{\r\n      this.setState((state,props)=>{\r\n        return({\r\n          ...state,\r\n          defaultValues:{\r\n            ...state.defaultValues,\r\n            company_id : value\r\n          }\r\n        });\r\n      })  \r\n      console.log(this.state);\r\n    }\r\n\r\n\r\n    handleSbuChange = (value)=>{\r\n      this.setState((state,props)=>{\r\n        return({\r\n          ...state,\r\n          defaultValues:{\r\n            ...state.defaultValues,\r\n            sbu_id : value\r\n          }\r\n        });\r\n      })\r\n      console.log(this.state);\r\n    }\r\n\r\n    handledateChange = (value)=>{\r\n      this.setState((state,props)=>{\r\n        return({\r\n          ...state,\r\n          defaultValues:{\r\n            ...state.defaultValues,\r\n            invoice_date : value\r\n          }\r\n        });\r\n      })\r\n      console.log(this.state);\r\n    }\r\n\r\n\r\n    getExistingdata = ()=>{\r\n      return new Promise((resolve,reject)=>{\r\n        if(this.state.mode==='edit'){\r\n          HttpService.get(`invoicerule/form?id=${this.state.dynamicId}`).then((data)=>{\r\n            HttpService.get(`api/supplier/search?search=${data.data[0].party_id}`).then((da)=>{\r\n              this.setState((state,props)=>{\r\n                return({\r\n                  ...state,\r\n                  defaultValues:{\r\n                    company_id:data.data[0].company_id,\r\n                    party_id : data.data[0].party_id,\r\n                    party_name:da.data.supplier[0].supplier_display_name,\r\n                    sbu_id : data.data[0].sbu_id,\r\n                    invoice_date :data.data[0].invoice_date\r\n                  }\r\n                })\r\n              })\r\n              resolve();\r\n            })\r\n            .catch((error)=>{\r\n              notification['warning']({\r\n                message: 'Error',\r\n                description: \"Invalid Id\",\r\n              });\r\n              this.setState((state,props)=>{\r\n                return({\r\n                  dynamicId : '',\r\n                  mode : 'new'\r\n                })\r\n              })\r\n            })\r\n            reject();\r\n            \r\n          })\r\n          .catch((error)=>{\r\n            notification['warning']({\r\n              message: 'Error',\r\n              description: \"Invalid Id\",\r\n            });\r\n            this.setState((state,props)=>{\r\n              return({\r\n                dynamicId : '',\r\n                mode : 'new'\r\n              })\r\n            })\r\n          })\r\n          reject();\r\n        }\r\n        else{\r\n          resolve()\r\n        }\r\n      })\r\n      \r\n    }\r\n\r\n\r\n    componentDidMount(){\r\n      var p1 = this.getCompanyName();\r\n      var p2 = this.getSbu();\r\n      Promise.all([p1,p2]).then(data=>{\r\n        this.getExistingdata().then(()=>{\r\n          console.log(this.state);\r\n        }).catch((err)=>{\r\n          return;\r\n        })\r\n      }).catch(error=>{\r\n        notification['warning']({\r\n          message: 'Error',\r\n          description: \"Server error\",\r\n        });\r\n      })\r\n    }\r\n\r\n\r\n\r\n\r\n    savedata = ()=>{\r\n      if(this.state.defaultValues.company_id==='' || this.state.defaultValues.party_id==='' || this.state.defaultValues.sbu_id==='' || this.state.defaultValues.invoice_date===''){\r\n        notification['warning']({\r\n          message: 'Error',\r\n          description: \"All the fields are required\",\r\n        });\r\n        return;\r\n      }\r\n      else{\r\n        if(this.state.mode==='new'){\r\n          var raw={\r\n            ...this.state.defaultValues\r\n          }\r\n        }\r\n        else{\r\n          var raw = {\r\n            ...this.state.defaultValues,\r\n            id: this.state.dynamicId\r\n          }\r\n        }\r\n        HttpService.post(`invoicerule/form?id=${this.state.dynamicId}`,raw).then((data)=>{\r\n          console.log(data.data.id)\r\n          notification['warning']({\r\n            message: 'Success',\r\n            description: \"Data Saved\",\r\n          });\r\n          setTimeout(function(){\r\n            window.location.href=\"/invoicerule/data/form/\"+data.data.id\r\n          },300)\r\n        }).catch((error)=>{\r\n          notification['warning']({\r\n            message: 'Error',\r\n            description: \"Error saving data\",\r\n          });\r\n          return;\r\n        })\r\n      }\r\n    }\r\n\r\n  render() {\r\n    return (\r\n      <div style={{ background: '#F5F5F5',height:'100vh',padding:'40px', width:'100%' }}>\r\n      <a className=\"back-button\" href=\"/\"><i class=\"fas fa-home\"></i></a>\r\n        <Card \r\n            title=\"INVOICE RULE\" \r\n            bordered={false} \r\n            style={{ width: '50%',marginLeft:'25%' }}\r\n            headStyle={{background:'#4179ef', color:'#fff'}}\r\n        >\r\n          <div style={{ padding:'20px' }}>\r\n            <Row style={{ paddingBottom:'20px' }} >\r\n              <Col span={8}>\r\n                <p>Company Name : </p>\r\n              </Col>\r\n              <Col span={16}>\r\n                <Select defaultValue={this.state.defaultValues.company_id} value={this.state.defaultValues.company_id} style={{ width:'100%' }} onChange={this.handleCompanyChange }>\r\n                  <Option value=\"\">Select any option..</Option>\r\n                  {\r\n                    (this.state.countryList).map((d,i)=>{\r\n                      return(<Option key={i} value={d.id}>{d.name}</Option>)\r\n                    })\r\n                  }\r\n                </Select>\r\n              </Col>\r\n            </Row>\r\n            <Row style={{ paddingBottom:'20px' }}>\r\n              <Col span={8}>\r\n                <p>Party Name : </p>\r\n              </Col>\r\n              <Col span={16}>\r\n              <Select\r\n                showSearch\r\n                value={this.state.defaultValues.party_name}\r\n                placeholder=\"search\"\r\n                style={{ width:'100%' }}\r\n                defaultActiveFirstOption={false}\r\n                showArrow={false}\r\n                filterOption={false}\r\n                onSearch={this.handleSearchParty}\r\n                onChange={this.handleChangeParty}\r\n                notFoundContent={null}\r\n              >\r\n                {\r\n                  this.state.partList.map((d,i) => <Option key={i} value={d.supplier_id}>{d.supplier_display_name}</Option>)\r\n                }\r\n              </Select>\r\n              </Col>\r\n            </Row>\r\n            <Row style={{ paddingBottom:'20px' }}>\r\n              <Col span={8}>\r\n                <p>SBU : </p>\r\n              </Col>\r\n              <Col span={16}>\r\n                <Select defaultValue={this.state.defaultValues.sbu_id} value={this.state.defaultValues.sbu_id} style={{ width:'100%' }} onChange={this.handleSbuChange }>\r\n                  <Option value=\"\">Select any option..</Option>\r\n                  {\r\n                    (this.state.sbuList).map((d,i)=>{\r\n                      return(<Option key={i} value={d.id}>{d.sbu}</Option>)\r\n                    })\r\n                  }\r\n                </Select>\r\n              </Col>\r\n            </Row>\r\n            <Row style={{ paddingBottom:'20px' }}>\r\n              <Col span={8}>\r\n                <p>Invoice Date : </p>\r\n              </Col>\r\n              <Col span={16}>\r\n                <Select defaultValue={this.state.defaultValues.invoice_date} value={this.state.defaultValues.invoice_date} style={{ width:'100%' }} onChange={this.handledateChange }>\r\n                  <Option value=\"\">Select any option..</Option>\r\n                  <Option value=\"check_in_date\">Check In Date</Option>\r\n                  <Option value=\"check_out_date\">Check Out Date</Option>\r\n                  <Option value=\"invoice_date\">Invoice Date</Option>\r\n                  <Option value=\"manual\">Manual</Option>\r\n                </Select>\r\n              </Col>\r\n            </Row>\r\n            <div style={{float :'right'}}>\r\n             <Button type=\"primary\" loading={this.state.loading} onClick={this.savedata}>\r\n                Save\r\n              </Button>\r\n            </div>\r\n          \r\n          </div>\r\n        </Card>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\n\r\nexport default withRouter(InvoiceRuleform);","import React, { Component } from 'react'\r\nimport {BrowserRouter as Router,Route} from 'react-router-dom';\r\nimport Form from './form';\r\nimport InvoiceRuleform from './invoicerule/form';\r\n\r\nexport default class App extends Component {\r\n  render() {\r\n    return (\r\n      <Router>\r\n        {/* <Route exact path=\"/\" component={()=>(<div>RealBooks</div>)} /> */}\r\n        <Route exact path=\"/local/booking\" component={Form} />\r\n        <Route exact path=\"/local/booking/:ra_reference\" component={Form} />\r\n        <Route exact path=\"/invoicerule/data/form\" component={InvoiceRuleform} />\r\n        <Route exact path=\"/invoicerule/data/form/:id\" component={InvoiceRuleform} />\r\n      </Router>\r\n    )\r\n  }\r\n}\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n// import './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}